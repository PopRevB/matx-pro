{"version":3,"sources":["../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/Fab/Fab.js","app/views/chat-box/ChatService.js","app/views/chat-box/ChatSidenav.jsx","app/views/chat-box/EmptyMessage.jsx","app/views/chat-box/ChatContainer.jsx","app/views/chat-box/AppChat.jsx"],"names":["MenuItem","React","props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","useEnhancedEffect","window","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","children","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","_props$disabled","_props$divider","divider","focusVisibleClassName","_props$selected","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","value","container","pop","display","justifyContent","position","textDecoration","textAlign","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","Fab","_props$color","color","_props$disableFocusRi","disableFocusRipple","_props$size","size","_props$variant","variant","extended","capitalize","primary","secondary","colorInherit","focusRipple","label","short","borderRadius","padding","minWidth","height","boxShadow","shadows","getContrastText","grey","A100","disabledBackground","contrastText","main","dark","sizeSmall","sizeMedium","getContactById","id","axios","get","data","sendNewMessage","message","post","useStyles","makeStyles","chatSidenav","borderRight","ChatSidenav","currentUser","contactList","recentContactList","handleContactClick","src","avatar","status","map","contact","index","onClick","key","format","Date","lastChatTime","getTime","Divider","icon","fontSize","EmptyMessage","Icon","chatContainer","background","ChatContainer","currentUserId","toggleSidenav","currentChatRoom","opponentUser","messageList","handleMessageSend","useState","setMessage","Hidden","mdUp","IconButton","smDown","menuButton","shortid","generate","contactId","text","getTimeDifference","time","TextField","onChange","e","target","onKeyUp","event","shiftKey","tempMessage","trim","fullWidth","multiline","rows","AppChat","chatBottomRef","document","querySelector","open","setOpen","setCurrentUser","setOpponentUser","setCurrentChatRoom","setContactList","setRecentContactList","setMessageList","userRef","useRef","useTheme","isMobile","useMediaQuery","down","updateRecentContactList","useCallback","getRecentContact","then","useEffect","scrollToBottom","scrollTo","top","scrollHeight","behavior","routeSegments","Card","elevation","getChatRoomByContactId","chatId","recentListUpdated","setTimeout"],"mappings":"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","file":"static/js/59.f9201cb2.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minHeight: 36,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      borderRadius: '50%',\n      padding: 0,\n      minWidth: 0,\n      width: 56,\n      height: 56,\n      boxShadow: theme.shadows[6],\n      '&:active': {\n        boxShadow: theme.shadows[12]\n      },\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        },\n        textDecoration: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // assure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    primary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    secondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"extended\"`. */\n    extended: {\n      borderRadius: 48 / 2,\n      padding: '0 16px',\n      width: 'auto',\n      minHeight: 'auto',\n      minWidth: 48,\n      height: 48,\n      '&$sizeSmall': {\n        width: 'auto',\n        padding: '0 8px',\n        borderRadius: 34 / 2,\n        minWidth: 34,\n        height: 34\n      },\n      '&$sizeMedium': {\n        width: 'auto',\n        padding: '0 16px',\n        borderRadius: 40 / 2,\n        minWidth: 40,\n        height: 40\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"``. */\n    sizeSmall: {\n      width: 40,\n      height: 40\n    },\n\n    /* Styles applied to the root element if `size=\"medium\"``. */\n    sizeMedium: {\n      width: 48,\n      height: 48\n    }\n  };\n};\nvar Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'large' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'round' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","import axios from 'axios'\n\nexport const getContactById = (id) => {\n    return axios.get('/api/chat/contacts', { data: id })\n}\nexport const getRecentContact = (id) => {\n    return axios.get('/api/chat/contacts/recent', { data: id })\n}\nexport const getAllContact = (currentUserId) => {\n    return axios.get('/api/chat/contacts/all', { data: currentUserId })\n}\nexport const getChatRoomByContactId = (currentUser, contactId) => {\n    return axios.get('/api/chat/chat-room', {\n        data: { currentUser, contactId },\n    })\n}\nexport const deleteMessage = (message) => {\n    return axios.post('/api/chat/delete', message)\n}\nexport const sendNewMessage = (message) => {\n    return axios.post('/api/chat/add', message)\n}\nexport const updateMessage = (message) => {\n    return axios.post('/api/chat/update', message)\n}\n","import React from 'react'\nimport { ChatAvatar } from 'app/components'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { Divider } from '@material-ui/core'\nimport { format } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    chatSidenav: {\n        borderRight: '1px solid rgba(0, 0, 0, 0.08)',\n        height: 450,\n    },\n}))\n\nconst ChatSidenav = ({\n    currentUser,\n    contactList = [],\n    recentContactList = [],\n    handleContactClick,\n}) => {\n    const classes = useStyles()\n\n    return (\n        <div className={clsx('bg-default', classes.chatSidenav)}>\n            <div className=\"chat-sidenav__topbar flex items-center h-56 px-4 bg-primary\">\n                <ChatAvatar\n                    src={currentUser.avatar}\n                    status={currentUser.status}\n                />\n                <h5 className=\"ml-4 whitespace-pre mb-0 font-medium text-18 text-white\">\n                    {currentUser.name}\n                </h5>\n            </div>\n            <Scrollbar className=\"relative h-full\">\n                {recentContactList.map((contact, index) => (\n                    <div\n                        onClick={() => handleContactClick(contact.id)}\n                        key={index}\n                        className=\"flex items-center p-4 cursor-pointer  gray-on-hover\"\n                    >\n                        <ChatAvatar\n                            src={contact.avatar}\n                            status={contact.status}\n                        />\n                        <div className=\"pl-4\">\n                            <p className=\"m-0\">{contact.name}</p>\n                            <p className=\"m-0 text-muted\">\n                                {format(\n                                    new Date(contact.lastChatTime).getTime(),\n                                    'MMMM dd, yyyy'\n                                )}\n                            </p>\n                        </div>\n                    </div>\n                ))}\n                <Divider />\n                {contactList.map((contact, index) => (\n                    <div\n                        onClick={() => handleContactClick(contact.id)}\n                        key={index}\n                        className=\"flex items-center px-4 py-1 cursor-pointer  gray-on-hover\"\n                    >\n                        <ChatAvatar\n                            src={contact.avatar}\n                            status={contact.status}\n                        />\n                        <div className=\"pl-4\">\n                            <p>{contact.name}</p>\n                        </div>\n                    </div>\n                ))}\n            </Scrollbar>\n        </div>\n    )\n}\n\nexport default ChatSidenav\n","import React from 'react'\nimport { Icon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    icon: {\n        fontSize: '4rem',\n    },\n}))\n\nconst EmptyMessage = () => {\n    const classes = useStyles()\n\n    return (\n        <div className=\"h-220 w-220 rounded elevation-z6 bg-default flex justify-center items-center\">\n            <Icon className={classes.icon} color=\"primary\">\n                chat\n            </Icon>\n        </div>\n    )\n}\n\nexport default EmptyMessage\n","import React, { Fragment } from 'react'\nimport {\n    IconButton,\n    Icon,\n    Divider,\n    Fab,\n    TextField,\n    MenuItem,\n    Hidden,\n} from '@material-ui/core'\nimport { MatxMenu } from 'app/components'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport EmptyMessage from './EmptyMessage'\nimport { ChatAvatar } from 'app/components'\nimport { getTimeDifference } from 'utils'\nimport shortid from 'shortid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { useState } from 'react'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    chatContainer: {\n        background: 'rgba(0, 0, 0, 0.05)',\n        height: 450,\n    },\n}))\n\nconst ChatContainer = ({\n    id: currentUserId,\n    toggleSidenav,\n    currentChatRoom,\n    opponentUser,\n    messageList = [],\n    handleMessageSend,\n}) => {\n    const [message, setMessage] = useState('')\n    const classes = useStyles()\n\n    const sendMessageOnEnter = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            let tempMessage = message.trim()\n            if (tempMessage !== '') handleMessageSend(tempMessage)\n            setMessage('')\n        }\n    }\n\n    return (\n        <div className={clsx('flex-column relative', classes.chatContainer)}>\n            <div className=\"chat-container__topbar flex items-center justify-between p-1 bg-primary\">\n                <div className=\"flex items-center\">\n                    <Hidden mdUp>\n                        <IconButton onClick={toggleSidenav}>\n                            <Icon className=\"text-white\">short_text</Icon>\n                        </IconButton>\n                    </Hidden>\n\n                    <Hidden smDown>\n                        <div className=\"pl-3\"></div>\n                    </Hidden>\n\n                    {opponentUser && (\n                        <Fragment>\n                            <ChatAvatar\n                                src={opponentUser.avatar}\n                                status={opponentUser.status}\n                            />\n                            <h5 className=\"ml-4 whitespace-pre mb-0 font-medium text-18 text-white\">\n                                {opponentUser.name}\n                            </h5>\n                        </Fragment>\n                    )}\n                </div>\n                <MatxMenu\n                    menuButton={\n                        <IconButton>\n                            <Icon className=\"text-white\">more_vert</Icon>\n                        </IconButton>\n                    }\n                >\n                    <MenuItem className=\"flex items-center\">\n                        <Icon className=\"mr-4\">account_circle</Icon> Contact\n                    </MenuItem>\n                    <MenuItem className=\"flex items-center\">\n                        <Icon className=\"mr-4\">volume_mute</Icon> Mute\n                    </MenuItem>\n                    <MenuItem className=\"flex items-center\">\n                        <Icon className=\"mr-4\">delete</Icon> Clear Chat\n                    </MenuItem>\n                </MatxMenu>\n            </div>\n\n            <Scrollbar\n                className=\"chat-message-list flex-grow relative\"\n                id=\"chat-message-list\"\n            >\n                {currentChatRoom === '' && (\n                    <div className=\"flex-column justify-center items-center h-full\">\n                        <EmptyMessage />\n                        <p>Select a contact</p>\n                    </div>\n                )}\n                {messageList.map((message, index) => (\n                    <div\n                        className=\"flex items-start px-4 py-3\"\n                        key={shortid.generate()}\n                    >\n                        <ChatAvatar\n                            src={message.avatar}\n                            status={message.status}\n                        />\n                        <div className=\"ml-4\">\n                            <p className=\"text-muted m-0 mb-2\">\n                                {message.name}\n                            </p>\n                            <div\n                                className={clsx({\n                                    'px-4 py-2 mb-2 border-radius-4 bg-paper': true,\n                                    'bg-primary text-white':\n                                        currentUserId === message.contactId,\n                                })}\n                            >\n                                <span className=\"whitespace-pre-wrap\">\n                                    {message.text}\n                                </span>\n                            </div>\n                            <small className=\"text-muted mb-0\">\n                                {getTimeDifference(new Date(message.time))} ago\n                            </small>\n                        </div>\n                    </div>\n                ))}\n            </Scrollbar>\n\n            <Divider />\n\n            {currentChatRoom !== '' && (\n                <div className=\"flex items-center px-4 py-2\">\n                    <TextField\n                        label=\"Type your message here*\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onKeyUp={sendMessageOnEnter}\n                        fullWidth\n                        multiline={true}\n                        rows={1}\n                        variant=\"outlined\"\n                    />\n                    <div>\n                        <Fab\n                            onClick={() => {\n                                if (message.trim() !== '')\n                                    handleMessageSend(message)\n                                setMessage('')\n                            }}\n                            color=\"primary\"\n                            className=\"ml-4\"\n                        >\n                            <Icon>send</Icon>\n                        </Fab>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ChatContainer\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Card, useMediaQuery } from '@material-ui/core'\nimport {\n    Breadcrumb,\n    MatxSidenavContainer,\n    MatxSidenav,\n    MatxSidenavContent,\n} from 'app/components'\nimport {\n    getAllContact,\n    getRecentContact,\n    sendNewMessage,\n    getContactById,\n    getChatRoomByContactId,\n} from './ChatService'\nimport ChatSidenav from './ChatSidenav'\nimport ChatContainer from './ChatContainer'\nimport { useTheme } from '@material-ui/core/styles'\n\nconst AppChat = () => {\n    const chatBottomRef = document.querySelector('#chat-message-list')\n    const [open, setOpen] = useState(true)\n    const [currentUser, setCurrentUser] = useState({\n        id: '7863a6802ez0e277a0f98534',\n    })\n    const [opponentUser, setOpponentUser] = useState(null)\n    const [currentChatRoom, setCurrentChatRoom] = useState('')\n    const [contactList, setContactList] = useState([])\n    const [recentContactList, setRecentContactList] = useState([])\n    const [messageList, setMessageList] = useState([])\n    const userRef = useRef(currentUser)\n\n    const theme = useTheme()\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n\n    const updateRecentContactList = useCallback(() => {\n        let { id } = userRef.current\n        getRecentContact(id).then((data) => {\n            setRecentContactList(data.data)\n        })\n    }, [])\n\n    useEffect(() => {\n        let { id } = userRef.current\n\n        getContactById(id).then((data) => {\n            setOpen(isMobile)\n            setCurrentUser({ ...data.data })\n        })\n\n        getAllContact(currentUser.id).then((data) => setContactList(data.data))\n        updateRecentContactList()\n    }, [isMobile, currentUser.id, updateRecentContactList])\n\n    const handleMessageSend = (message) => {\n        let { id } = currentUser\n\n        if (currentChatRoom === '') return\n        sendNewMessage({\n            chatId: currentChatRoom,\n            text: message,\n            contactId: id,\n            time: new Date(),\n        }).then((data) => {\n            setMessageList([...data.data])\n            scrollToBottom()\n        })\n\n        // bot message\n        setTimeout(() => {\n            sendNewMessage({\n                chatId: currentChatRoom,\n                text: `Hi, I'm ${opponentUser.name}. Your imaginary friend.`,\n                contactId: opponentUser.id,\n                time: new Date(),\n            }).then((data) => {\n                setMessageList([...data.data])\n                scrollToBottom()\n            })\n        }, 750)\n        // bot message ends here\n    }\n\n    const handleContactClick = (contactId) => {\n        if (isMobile) toggleSidenav()\n\n        getContactById(contactId).then(({ data }) => {\n            setOpponentUser({ ...data })\n        })\n        getChatRoomByContactId(currentUser.id, contactId).then(({ data }) => {\n            let { chatId, messageList, recentListUpdated } = data\n            setCurrentChatRoom(chatId)\n            setMessageList(messageList)\n            scrollToBottom()\n\n            if (recentListUpdated) {\n                updateRecentContactList()\n            }\n        })\n    }\n\n    const scrollToBottom = () => {\n        if (chatBottomRef) {\n            chatBottomRef.scrollTo({\n                top: chatBottomRef.scrollHeight,\n                behavior: 'smooth',\n            })\n        }\n    }\n\n    const toggleSidenav = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb routeSegments={[{ name: 'Chat' }]} />\n            </div>\n            <Card elevation={6}>\n                <MatxSidenavContainer>\n                    <MatxSidenav\n                        width=\"230px\"\n                        open={open}\n                        toggleSidenav={toggleSidenav}\n                    >\n                        <ChatSidenav\n                            currentUser={currentUser}\n                            contactList={contactList}\n                            recentContactList={recentContactList}\n                            handleContactClick={handleContactClick}\n                        />\n                    </MatxSidenav>\n                    <MatxSidenavContent>\n                        <ChatContainer\n                            id={currentUser?.id}\n                            opponentUser={opponentUser}\n                            messageList={messageList}\n                            currentChatRoom={currentChatRoom}\n                            handleMessageSend={handleMessageSend}\n                            toggleSidenav={toggleSidenav}\n                        />\n                    </MatxSidenavContent>\n                </MatxSidenavContainer>\n            </Card>\n        </div>\n    )\n}\n\nexport default AppChat\n"],"sourceRoot":""}