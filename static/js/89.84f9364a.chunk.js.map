{"version":3,"sources":["app/views/list/InfiniteList.jsx"],"names":["api","InfiniteList","useState","trackList","setTrackList","hasMoreItems","setHasMoreItems","nextHref","setNextHref","isAlive","setIsAlive","useEffect","loader","className","key","variant","pageStart","loadMore","url","qwest","get","client_id","linked_partitioning","page_size","cache","then","xhr","resp","tracks","collection","map","track","artwork_url","user","avatar_url","push","next_href","hasMore","useWindow","container","spacing","i","item","lg","md","xs","sm","title","elevation","href","permalink_url","src","alt"],"mappings":"iOAKMA,EACO,6BADPA,EAES,mCA0GAC,UAvGM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACN,OAAO,kBAAMD,GAAW,MACzB,IAEH,IA2CME,EACF,yBAAKC,UAAU,yBAAyBC,IAAI,UACxC,kBAAC,IAAD,CAAkBC,QAAQ,mBAIlC,OACI,yBAAKF,UAAU,8BACX,kBAAC,IAAD,CACIG,UAAW,EACXC,SArDM,WACd,IAAIC,EAAMlB,EAAc,2BAEpBO,IACAW,EAAMX,GAGVY,IACKC,IACGF,EACA,CACIG,UAAWrB,EACXsB,oBAAqB,EACrBC,UAAW,IAEf,CACIC,OAAO,IAGdC,MAAK,SAAUC,EAAKC,GACjB,GAAIA,EAAM,CACN,IAAIC,EAASzB,EACbwB,EAAKE,WAAWC,KAAI,SAACC,GAMjB,OALyB,MAArBA,EAAMC,cACND,EAAMC,YAAcD,EAAME,KAAKC,YAGnCN,EAAOO,KAAKJ,GACLA,KAGPtB,IACIkB,EAAKS,WACLhC,EAAawB,GACbpB,EAAYmB,EAAKS,YAEjB9B,GAAgB,SAkB5B+B,QAAShC,EACTO,OAAQA,EACR0B,WAAW,GAEX,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,GACpBrC,EAAU2B,KAAI,SAACC,EAAOU,GAAR,OACX,kBAAC,IAAD,CACIC,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GACJC,GAAI,EACJjC,UAAU,QACVC,IAAKiB,EAAMgB,OAEX,kBAAC,IAAD,CACIlC,UAAU,iCACVmC,UAAW,GAEX,uBACIC,KAAMlB,EAAMmB,cACZrC,UAAU,eAEV,yBACIsC,IAAKpB,EAAMC,YACXnB,UAAU,mCACVuC,IAAI,iBAER,uBAAGvC,UAAU,WAAWkB,EAAMgB","file":"static/js/89.84f9364a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport qwest from 'qwest'\nimport { Grid, Card, CircularProgress } from '@material-ui/core'\n\nconst api = {\n    baseUrl: 'https://api.soundcloud.com',\n    client_id: 'caf73ef1e709f839664ab82bef40fa96',\n}\n\nconst InfiniteList = () => {\n    const [trackList, setTrackList] = useState([])\n    const [hasMoreItems, setHasMoreItems] = useState(true)\n    const [nextHref, setNextHref] = useState(null)\n    const [isAlive, setIsAlive] = useState(true)\n\n    useEffect(() => {\n        return () => setIsAlive(false)\n    }, [])\n\n    const loadItems = () => {\n        let url = api.baseUrl + '/users/8665091/favorites'\n\n        if (nextHref) {\n            url = nextHref\n        }\n\n        qwest\n            .get(\n                url,\n                {\n                    client_id: api.client_id,\n                    linked_partitioning: 1,\n                    page_size: 10,\n                },\n                {\n                    cache: true,\n                }\n            )\n            .then(function (xhr, resp) {\n                if (resp) {\n                    let tracks = trackList\n                    resp.collection.map((track) => {\n                        if (track.artwork_url == null) {\n                            track.artwork_url = track.user.avatar_url\n                        }\n\n                        tracks.push(track)\n                        return track\n                    })\n\n                    if (isAlive) {\n                        if (resp.next_href) {\n                            setTrackList(tracks)\n                            setNextHref(resp.next_href)\n                        } else {\n                            setHasMoreItems(false)\n                        }\n                    }\n                }\n            })\n    }\n\n    const loader = (\n        <div className=\"w-full text-center p-6\" key=\"loader\">\n            <CircularProgress variant=\"indeterminate\"></CircularProgress>\n        </div>\n    )\n\n    return (\n        <div className=\"p-8 h-full-screen scroll-y\">\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={loadItems}\n                hasMore={hasMoreItems}\n                loader={loader}\n                useWindow={false}\n            >\n                <Grid container spacing={2}>\n                    {trackList.map((track, i) => (\n                        <Grid\n                            item\n                            lg={3}\n                            md={3}\n                            xs={12}\n                            sm={6}\n                            className=\"track\"\n                            key={track.title}\n                        >\n                            <Card\n                                className=\"p-4 flex justify-center h-full\"\n                                elevation={6}\n                            >\n                                <a\n                                    href={track.permalink_url}\n                                    className=\"text-center\"\n                                >\n                                    <img\n                                        src={track.artwork_url}\n                                        className=\"border-radius-circle h-148 w-148\"\n                                        alt=\"albutm cover\"\n                                    />\n                                    <p className=\"caption\">{track.title}</p>\n                                </a>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </InfiniteScroll>\n        </div>\n    )\n}\n\nexport default InfiniteList\n"],"sourceRoot":""}