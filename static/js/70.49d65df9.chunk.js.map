{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/unstable_useId.js","../node_modules/@material-ui/icons/esm/Twitter.js","app/views/pages/user-list/ProfileCard2.jsx","app/views/pages/user-list/UserList4.jsx"],"names":["useId","idOverride","_React$useState","React","defaultId","setDefaultId","id","concat","Math","round","random","createSvgIcon","d","useStyles","makeStyles","palette","google","color","twitter","ProfileCard2","user","classes","Card","className","Grid","container","spacing","alignItems","item","sm","xs","Avatar","src","imgUrl","name","company","toLowerCase","LinearProgress","value","variant","to","fontSize","clsx","Twitter","Divider","Button","size","UserList4","useState","isAlive","setIsAlive","userList","setUserList","rowsPerPage","setRowsPerPage","page","setPage","useEffect","Axios","get","then","data","routeSegments","path","md","Icon","slice","map","ind","key","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target"],"mappings":"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","file":"static/js/70.49d65df9.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');","import React from 'react'\nimport {\n    Card,\n    Button,\n    Avatar,\n    Grid,\n    LinearProgress,\n    Divider,\n} from '@material-ui/core'\nimport { GoogleIcon } from 'app/components'\nimport { Link } from 'react-router-dom'\nimport { Twitter } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    google: {\n        color: '#ec412c',\n    },\n    twitter: {\n        color: '#039ff5',\n    },\n}))\n\nconst ProfileCard2 = ({ user }) => {\n    const classes = useStyles()\n\n    return (\n        <Card className=\"mb-4 pb-4\">\n            <div className=\"p-3\">\n                <Grid container spacing={3} alignItems=\"center\">\n                    <Grid item sm={4} xs={12}>\n                        <div className=\"flex items-center m-2\">\n                            <Avatar className=\"h-56 w-56\" src={user.imgUrl} />\n                            <div className=\"ml-4\">\n                                <h5 className=\"m-0\">{user.name}</h5>\n                                <p className=\"mb-0 mt-2 text-muted font-normal capitalize\">\n                                    {user.company?.toLowerCase()}\n                                </p>\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <div className=\"flex justify-between items-center mb-1\">\n                            <p className=\"m-0 font-medium text-muted\">\n                                Progressbar\n                            </p>\n                            <p className=\"m-0 text-muted\">40%</p>\n                        </div>\n                        <div>\n                            <LinearProgress\n                                color=\"primary\"\n                                value={35}\n                                variant=\"determinate\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <Link className=\"flex mb-1 items-center\" to=\"/\">\n                            <GoogleIcon\n                                fontSize=\"small\"\n                                className={clsx('text-14', classes.google)}\n                            />\n                            <span className=\"ml-2\">ui-lib@gmail.com</span>\n                        </Link>\n                        <Link className=\"flex items-center\" to=\"/\">\n                            <Twitter\n                                fontSize=\"small\"\n                                className={clsx('text-14', classes.twitter)}\n                            />\n                            <span className=\"ml-2\">uilib</span>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n\n            <Divider className=\"mb-4\" />\n\n            <div className=\"flex flex-wrap justify-between items-center px-5 m--2\">\n                <p className=\"text-muted m-0 m-2\">Registered 3 mins ago</p>\n                <div className=\"flex flex-wrap m-2\">\n                    <Button\n                        size=\"small\"\n                        className=\"bg-light-primary hover-bg-primary text-primary px-5 mr-1\"\n                    >\n                        CHAT\n                    </Button>\n                    <Button\n                        size=\"small\"\n                        className=\"bg-light-primary hover-bg-primary text-primary px-5\"\n                    >\n                        PROFILE\n                    </Button>\n                </div>\n            </div>\n            {/* <div className=\"flex justify-between mb-4\">\n        <Avatar className=\"h-56 w-56\" src={user?.imgUrl} />\n        <div>\n          <MatxMenu\n            menuButton={<Icon className=\"cursor-pointer\">more_horiz</Icon>}\n          >\n            <MenuItem>\n              <Icon fontSize=\"small\"> person_pin </Icon>\n              <span className=\"pl-4\"> View Profile </span>\n            </MenuItem>\n            <MenuItem>\n              <Icon fontSize=\"small\"> person_add </Icon>\n              <span className=\"pl-4\"> Add to Team </span>\n            </MenuItem>\n            <MenuItem>\n              <Icon fontSize=\"small\"> edit </Icon>\n              <span className=\"pl-4\"> Edit Profile </span>\n            </MenuItem>\n          </MatxMenu>\n        </div>\n      </div>\n      <div>\n        <h5 className=\"m-0 capitalize\">{user?.name}</h5>\n        <p className=\"text-muted\">\n          It is a long established fact that a reader will be distracted by the\n          readable content of a page when looking at its layout.\n        </p>\n        <div className=\"mb-4\">\n          <Link className=\"flex mb-1 items-center\" to=\"/\">\n            <GoogleIcon\n              fontSize=\"small\"\n              className={clsx(\"text-14\", classes.google)}\n            />\n            <span className=\"ml-2\">ui-lib@gmail.com</span>\n          </Link>\n          <Link className=\"flex items-center\" to=\"/\">\n            <Twitter\n              fontSize=\"small\"\n              className={clsx(\"text-14\", classes.twitter)}\n            />\n            <span className=\"ml-2\">uilib</span>\n          </Link>\n        </div>\n        <div className=\"flex flex-wrap\">\n          <Button\n            size=\"small\"\n            className=\"bg-light-primary hover-bg-primary text-primary px-5 mr-1\"\n          >\n            CHAT\n          </Button>\n          <Button\n            size=\"small\"\n            className=\"bg-light-primary hover-bg-primary text-primary px-5\"\n          >\n            PROFILE\n          </Button>\n        </div>\n      </div> */}\n        </Card>\n    )\n}\n\nexport default ProfileCard2\n","import React, { useState, useEffect } from 'react'\nimport {\n    Grid,\n    Card,\n    Avatar,\n    Divider,\n    Button,\n    Icon,\n    TablePagination,\n} from '@material-ui/core'\nimport { Breadcrumb } from 'app/components'\nimport Axios from 'axios'\nimport ProfileCard2 from './ProfileCard2'\n\nconst UserList4 = () => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [userList, setUserList] = useState([])\n\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [page, setPage] = useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    useEffect(() => {\n        Axios.get('/api/user/all').then(({ data }) => {\n            if (isAlive) setUserList(data)\n        })\n        return () => setIsAlive(false)\n    }, [isAlive])\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Pages', path: '/pages' },\n                        { name: 'User List 4' },\n                    ]}\n                />\n            </div>\n            <Grid container spacing={2}>\n                <Grid item md={3} sm={12} xs={12}>\n                    <Card className=\"pb-8\">\n                        <div className=\"p-8 flex-column items-center\">\n                            <Avatar\n                                className=\"h-56 w-56 mb-6\"\n                                src=\"/assets/images/face-1.png\"\n                            />\n                            <p className=\"mt-0 mb-2 text-muted font-normal capitalize\">\n                                Project manager\n                            </p>\n                            <h5 className=\"m-0\">Asiya Wolff</h5>\n                        </div>\n                        <Divider className=\"mb-8\" />\n                        <div className=\"mb-8\">\n                            <p className=\"text-muted mt-0 mb-3 ml-3\">TEAMS</p>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Alpha</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Beta</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Sales</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Report</span>\n                            </Button>\n                        </div>\n                        <div>\n                            <p className=\"text-muted mt-0 mb-3 ml-3\">MY TEAM</p>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">favorite</Icon>\n                                <span className=\"ml-2\">Favorite</span>\n                            </Button>\n                        </div>\n                    </Card>\n                </Grid>\n                <Grid item md={9} sm={12} xs={12}>\n                    {userList\n                        .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        .map((user, ind) => (\n                            <ProfileCard2 key={user.id} user={user} />\n                        ))}\n                    <div className=\"mt-4\">\n                        <TablePagination\n                            className=\"px-4\"\n                            rowsPerPageOptions={[10, 25, 50]}\n                            component=\"div\"\n                            count={userList.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default UserList4\n"],"sourceRoot":""}