{"version":3,"sources":["app/components/ShoppingCart/ShoppingCart.jsx","app/components/Footer/Footer.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/Sidenav/Sidenav.jsx","app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxLayout/Layout2/Layout2Navbar.jsx","app/components/NotificationBar2/NotificationCard.jsx","app/components/NotificationBar2/NotificationBar2.jsx","app/components/MatxLayout/Layout2/Layout2Topbar.jsx","app/components/MatxLayout/Layout2/layout2.style.js","app/components/MatxLayout/Layout2/Layout2.jsx"],"names":["useStyles","makeStyles","palette","miniCart","width","height","transition","background","customBadge","backgroundColor","color","cartListLoaded","ShoppingCart","container","useState","totalCost","setTotalCost","panelOpen","setPanelOpen","classes","dispatch","useDispatch","history","useHistory","user","useAuth","cartList","useSelector","state","ecommerce","settings","useSettings","getCartList","id","handleDrawerToggle","useEffect","total","forEach","product","price","amount","onClick","badge","badgeContent","length","className","theme","themes","activeTheme","variant","anchor","open","onClose","ModalProps","keepMounted","clsx","map","key","size","updateCartAmount","disabled","src","imgUrl","alt","title","deleteProductFromCart","userId","fontSize","push","toFixed","footer","minHeight","display","padding","flexDirection","margin","appbar","zIndex","Footer","useTheme","footerTheme","position","href","SidenavTheme","children","sidenavTheme","layout1Settings","leftSidebar","toggle","right","bottom","SecondarySidebarToggle","updateSettings","secondarySidebar","IconButton","aria-label","Icon","Fab","BadgeSelected","withStyles","top","borderRadius","Badge","label","secondary","main","primary","dark","fontWeight","transform","marginBottom","cursor","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","alignItems","demoLayouts","name","thumbnail","isPro","options","activeLayout","mode","bgOpacity","topbar","fixed","layout2Settings","MatxCustomizer","props","setOpen","tabIndex","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","ThemeProvider","Drawer","Button","suppressScrollX","layout","invisible","Card","elevation","Link","target","root","boxShadow","shadows","marginRight","SecondarySidebarContent","icon","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","left","breakpoints","up","Sidenav","items","navigations","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","updateSidebarMode","brand","hideOnCompact","Brand","sidenavHoverShow","sidenav","primaryRGB","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","text","maxWidth","userInfo","React","memo","convertHexToRGB","getSidenavWidth","Hidden","smDown","Switch","onChange","checked","Layout2Navbar","navigation","max","circle","verticalLine","upperLine","lowerLine","lightBG","NotificationCard","notification","isFirstIndex","isLastIndex","to","getTimeDifference","Date","timestamp","subtitle","Divider","down","notificationCard","marginTop","opacity","NotificationBar2","notifcationList","notifications","getNotification","parentThemePalette","style","type","ind","borderColor","divider","borderBottom","paddingTop","paddingBottom","brandText","menuItem","minWidth","Layout2Topbar","logout","sitelogo","offsetTop","menuButton","Avatar","avatar","MenuItem","mdUp","layout2Styles","listStyle","float","marginLeft","boxSizing","textDecoration","visibility","content","fontFamily","fontStyle","lineHeight","textTransform","whiteSpace","wordWrap","direction","W","fallbacks","Layout2","routes","useContext","AppContext","topbarTheme","navbarTheme","navbar","sidenavMode","showSidenav","show","layoutClasses","Layout1Sidenav","perfectScrollbar","renderRoutes"],"mappings":"mSAgBMA,EAAYC,aAAW,cAAGC,QAAH,uBAA4B,CACrDC,SAAU,CACNC,MAAO,uBACP,kBAAmB,CACfC,OAAQ,wBAEZ,qBAAsB,CAClBC,WAAY,wBACZ,UAAW,CACPC,WAAY,sBAIxBC,YAAa,CACTC,gBAAiB,OACjBC,MAAO,YAIXC,GAAiB,EA0JNC,IAxJf,YAAsC,IAAdC,EAAa,EAAbA,UACpB,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAUnB,IACVoB,EAAWC,cACXC,EAAUC,cACRC,EAASC,cAATD,KACAE,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAA1CH,SACAI,EAAaC,cAAbD,SAEHnB,IACDS,EAASY,YAAYR,EAAKS,KAC1BtB,GAAiB,GAGrB,IAAMuB,EAAqB,WACvBhB,GAAcD,IAoBlB,OAVAkB,qBAAU,WACN,IAAIC,EAAQ,EAEZV,EAASW,SAAQ,SAACC,GACdF,GAASE,EAAQC,MAAQD,EAAQE,UAGrCxB,EAAaoB,KACd,CAACV,IAGA,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAYe,QAASP,GACjB,kBAAC,IAAD,CAAOxB,MAAM,YAAYS,QAAS,CAACuB,MAAOvB,EAAQX,aAAcmC,aAAcjB,EAASkB,QACnF,kBAAC,IAAD,CAAMC,UAAU,cAAhB,mBAIR,kBAAC,IAAD,CAAeC,MAAOhB,EAASiB,OAAOjB,EAASkB,cAC3C,kBAAC,IAAD,CACInC,UAAWA,EACXoC,QAAQ,YACRC,OAAQ,QACRC,KAAMlC,EACNmC,QAASlB,EACTmB,WAAY,CACRC,aAAa,IAGjB,yBACIT,UAAWU,kBAAK,qBAAsBpC,EAAQhB,WAE9C,yBAAK0C,UAAU,6DACX,kBAAC,IAAD,CAAMnC,MAAM,WAAZ,iBACA,wBAAImC,UAAU,yBAAd,SAGJ,yBAAKA,UAAU,2BACVnB,EAAS8B,KAAI,SAAClB,GAAD,OACV,yBACImB,IAAKnB,EAAQL,GACbY,UAAU,+CAEV,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CACIa,KAAK,QACLjB,QAAS,kBACLrB,EACIuC,YACInC,EAAKS,GACLK,EAAQL,GACRK,EAAQE,OAAS,MAK7B,kBAAC,IAAD,CAAMK,UAAU,kBAAhB,sBAIJ,kBAAC,IAAD,CACIe,WAAYtB,EAAQE,OAAS,GAC7BkB,KAAK,QACLjB,QAAS,kBACLrB,EACIuC,YACInC,EAAKS,GACLK,EAAQL,GACRK,EAAQE,OAAS,MAK7B,kBAAC,IAAD,CAAMK,UAAU,kBAAhB,yBAKR,yBAAKA,UAAU,QACX,yBACIA,UAAU,OACVgB,IAAKvB,EAAQwB,OACbC,IAAKzB,EAAQ0B,SAGrB,yBAAKnB,UAAU,0CACX,wBAAIA,UAAU,2BACTP,EAAQ0B,OAEb,2BAAOnB,UAAU,cAAjB,IACMP,EAAQC,MADd,MACwBD,EAAQE,SAGpC,kBAAC,IAAD,CACIkB,KAAK,QACLjB,QAAS,kBACLrB,EACI6C,YACIzC,EAAK0C,OACL5B,EAAQL,OAKpB,kBAAC,IAAD,CAAMkC,SAAS,SAAf,eAMhB,kBAAC,IAAD,CACItB,UAAU,yBACVI,QAAQ,YACRvC,MAAM,UACN+B,QAzHI,WACpB1B,EAAY,IACZO,EAAQ8C,KAAK,uBACblD,GAAa,MAkHD,cAMgBH,EAAUsD,QAAQ,GANlC,W,qJCxKlBrE,EAAYC,aAAW,cAAGC,QAAH,uBAA4B,CACrDoE,OAAQ,CACJC,UAAW,uBACX,4BAA6B,CACzBC,QAAS,QACTpE,MAAO,OACPmE,UAAW,OACXE,QAAS,SACT,eAAgB,CACZC,cAAe,oBACf,MAAO,CACHC,OAAQ,0BAKxBC,OAAQ,CACJC,OAAQ,QA6CDC,IAzCA,WACX,IAAM3D,EAAUnB,IACV8C,EAAQiC,cACNjD,EAAaC,cAAbD,SAEFkD,EAAclD,EAASiB,OAAOjB,EAASwC,OAAOxB,QAAUA,EAE9D,OACI,kBAAC,IAAD,CAAeA,MAAOkC,GAClB,kBAAC,IAAD,CACItE,MAAM,UACNuE,SAAS,SACTpC,UAAW1B,EAAQyD,QAEnB,kBAAC,IAAD,CAAS/B,UAAWU,kBAAK,oBAAqBpC,EAAQmD,SAClD,yBAAKzB,UAAU,sCASX,uBAAGqC,KAAK,sDACJ,kBAAC,IAAD,CAAQjC,QAAQ,YAAYvC,MAAM,aAAlC,iBAIJ,0BAAMmC,UAAU,WAChB,uBAAGA,UAAU,OAAb,0BAC4B,IACxB,uBAAGqC,KAAK,qBAAR,iB,kCC3D5B,8CAceC,IATM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdtC,EAAQiC,cACNjD,EAAaC,cAAbD,SACFuD,EACFvD,EAASiB,OAAOjB,EAASwD,gBAAgBC,YAAYzC,QAAUA,EAEnE,OAAO,kBAAC,IAAD,CAAeA,MAAOuC,GAAeD,K,0ICJ1CpF,EAAYC,aAAW,cAAGC,QAAH,uBAA4B,CACrDsF,OAAQ,CACJP,SAAU,QACVQ,MAAO,OACPC,OAAQ,OACRb,OAAQ,GACRvE,WAAY,iBACZ,SAAU,CACNmF,MAAO,aAkDJE,EA7CgB,WAAO,IAAD,EAE3BxE,EAAUnB,IAChB,EAAqC+B,cAA7BD,EAAR,EAAQA,SAAU8D,EAAlB,EAAkBA,eAEZJ,EAAS,WACXI,EAAe,CACXC,iBAAkB,CAAE1C,MAAOrB,EAAS+D,iBAAiB1C,SAU7D,OACI,yBACIN,UAAWU,mBAAI,mBACVpC,EAAQqE,QAAS,GADP,qBAEL1D,EAAS+D,iBAAiB1C,MAFrB,KAKdrB,EAAS+D,iBAAiB1C,MACvB,kBAAC2C,EAAA,EAAD,CAAYrD,QAAS+C,EAAQ9B,KAAK,QAAQqC,aAAW,UACjD,kBAACC,EAAA,EAAD,gBAGNlE,EAAS+D,iBAAiB1C,MACxB,kBAAC8C,EAAA,EAAD,CAGIvF,MAAM,UACNqF,aAAW,SACXlD,UAAU,GACVJ,QAAS+C,GAET,kBAACQ,EAAA,EAAD,oB,oGC7CLE,EAVOC,aAAW,SAACrD,GAAD,MAAY,CACzCJ,MAAO,CACH0D,IAAK,IACLX,MAAO,IACPpF,OAAQ,OACRD,MAAO,OACPiG,aAAc,UANAF,CAQlBG,K,wBCeEtG,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAAH,uBAA4B,CACrDqG,MAAO,CACH7F,MAAOR,EAAQsG,UAAUC,KACzBhG,gBAAiBP,EAAQwG,QAAQC,KACjCC,WAAY,IACZC,UAAW,gBACXC,aAAc,SACdrC,QAAS,eACT4B,aAAc,MACdU,OAAQ,UACRC,cAAe,QACf7C,SAAU,OACV,kBAAmB,CACf1D,gBAAiBP,EAAQsG,UAAUC,KACnC/F,MAAOR,EAAQsG,UAAUS,eAGjCC,SAAU,CACNvC,OAAQ,kBAEZwC,cAAe,CACXlC,SAAU,QACVmB,IAAK,EACLX,MAAO,EACPZ,OAAQ,IAEZuC,sBAAuB,CACnBnC,SAAU,WACVQ,MAAO,EACPW,IAAK,GAETiB,UAAW,CACP,UAAW,CACP,iBAAkB,CACdpC,SAAU,WACVT,QAAS,OACT8C,eAAgB,SAChBC,WAAY,SACZlH,OAAQ,OACRD,MAAO,OACPG,WAAY,kBACZsE,OAAQ,UA0TlB2C,EAAc,CAChB,CACIC,KAAM,gBACNC,UAAW,oDACXC,OAAO,EACPC,QAAS,CACLC,aAAc,UACd7E,YAAa,OACbsC,gBAAiB,CACbC,YAAa,CACTuC,KAAM,OACNhF,MAAO,YACPiF,UAAW,KAEfC,OAAQ,CACJlF,MAAO,WACPmF,OAAO,IAGf3D,OAAQ,CACJxB,MAAO,gBAInB,CACI2E,KAAM,kBACNC,UAAW,oDACXC,OAAO,EACPC,QAAS,CACLC,aAAc,UACd7E,YAAa,OACbsC,gBAAiB,CACbC,YAAa,CACTuC,KAAM,UACNhF,MAAO,aACPiF,UAAW,KAEfC,OAAQ,CACJlF,MAAO,YACPmF,OAAO,MAKvB,CACIR,KAAM,eACNC,UAAW,yDACXC,OAAO,EACPC,QAAS,CACLC,aAAc,UACd7E,YAAa,OACbsC,gBAAiB,CACbC,YAAa,CACTuC,KAAM,OACNhF,MAAO,aACPiF,UAAW,KAEfC,OAAQ,CACJlF,MAAO,WACPmF,OAAO,MAKvB,CACIR,KAAM,aACNC,UAAW,oDACXC,OAAO,EACPC,QAAS,CACLC,aAAc,UACd7E,YAAa,cACbsC,gBAAiB,CACbC,YAAa,CACTuC,KAAM,OACNhF,MAAO,aACPiF,UAAW,KAEfC,OAAQ,CACJlF,MAAO,cACPmF,OAAO,IAGf3D,OAAQ,CACJxB,MAAO,gBAInB,CACI2E,KAAM,wBACNC,UAAW,oDACXC,OAAO,EACPC,QAAS,CACLC,aAAc,UACd7E,YAAa,UACbkF,gBAAiB,CACbJ,KAAM,QAEVxD,OAAQ,CACJxB,MAAO,iBAMRqF,EA5ZQ,SAACC,GAAW,IAAD,EAC9B,EAAwBtH,oBAAS,GAAjC,mBAAOqC,EAAP,KAAakF,EAAb,KACA,EAAgCvH,mBAAS,GAAzC,mBAAOwH,EAAP,KAAiBC,EAAjB,KAEMpH,EAAUnB,IAChB,EAAqC+B,cAA7BD,EAAR,EAAQA,SAAU8D,EAAlB,EAAkBA,eAgBZ4C,EAAc,WAChBH,GAASlF,IAEPsF,EAAkB,SAACC,GACrBH,EAAYG,IAGZ1F,EAAW,eAAQlB,EAASiB,OAAOjB,EAASkB,cAEhD,OACI,kBAAC,WAAD,KACI,kBAAC2F,EAAA,EAAD,CAAS3E,MAAM,iBAAiB4E,UAAU,QACtC,0BACI/F,UAAWU,mBAAI,mBAAIpC,EAAQoF,OAAQ,GAApB,qBAA0BpD,GAA1B,IACfV,QAAS+F,GAFb,UASJ,kBAACK,EAAA,EAAD,CAAe/F,MAAOE,GAClB,kBAAC8F,EAAA,EAAD,CACI5F,OAAQ,QACRC,KAAMA,EACNF,QAAQ,YACRG,QAASoF,EACTnF,WAAY,CACRC,aAAa,IAGjB,yBACIT,UAAWU,kBACP,gEACApC,EAAQgG,gBAGZ,yBAAKtE,UAAU,0DACX,kBAACmD,EAAA,EAAD,CAAMtF,MAAM,WAAZ,YACA,wBAAImC,UAAU,aAAd,kBACA,kBAACiD,EAAA,EAAD,CACIrD,QAAS+F,EACT3F,UAAW1B,EAAQiG,uBAEnB,kBAACpB,EAAA,EAAD,gBAGR,yBAAKnD,UAAU,kBACX,kBAACkG,EAAA,EAAD,CACI9F,QAAQ,WACRvC,MAAoB,IAAb4H,EAAiB,YAAc,UACtC7F,QAAS,kBAAMgG,EAAgB,IAC/B5F,UAAU,QAJd,SAQA,kBAACkG,EAAA,EAAD,CACI9F,QAAQ,WACRvC,MAAoB,IAAb4H,EAAiB,YAAc,UACtC7F,QAAS,kBAAMgG,EAAgB,KAHnC,aASJ,kBAAC,IAAD,CACIb,QAAS,CAAEoB,iBAAiB,GAC5BnG,UAAU,QAEI,IAAbyF,GACG,yBAAKzF,UAAU,aACX,yBAAKA,UAAU,cAAf,WAEA,yBAAKA,UAAU,eACV2E,EAAYhE,KAAI,SAACyF,GAAD,OACb,kBAAC,EAAD,CACIvI,MAAM,YACNmC,UAAWU,kBACP,uCACApC,EAAQkG,WAEZ1E,aAAc,MACduG,WAAYD,EAAOtB,MACnBlE,IAAKwF,EAAOxB,MAEZ,kBAAC0B,EAAA,EAAD,CACItG,UAAU,WACVJ,QAAS,kBACLmD,EACIqD,EAAOrB,UAGfwB,UAAW,GAEX,yBAAKvG,UAAU,sBACX,kBAACkG,EAAA,EAAD,CACI9F,QAAQ,YACRvC,MAAM,aAELuI,EAAOxB,OAIhB,yBACI5E,UAAU,SACVgB,IAAKoF,EAAOvB,UACZ3D,IAAKkF,EAAOxB,cAW1B,IAAba,GACG,6BACI,yBAAKzF,UAAW1B,EAAQ+F,UAAxB,6DAE0B,IACtB,kBAACmC,EAAA,EAAD,CACInE,KAAK,qDACLoE,OAAO,UAFX,yB,iCC/MlCtJ,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAAH,MAA4B,CACrDqJ,KAAM,CACFtE,SAAU,QACV5E,OAAQ,QACRD,MAAO,SAACgI,GAAD,OAAWA,EAAMhI,OACxBqF,MAAO,EACPC,OAAQ,EACRlB,QAAS,OACTE,cAAe,SACf6C,WAAY,SACZD,eAAgB,SAChBkC,UAXqB,iBAWJC,QAAQ,GACzBhJ,gBAAiBP,EAAQwG,QAAQD,KACjC5B,OAAQ,GACRvE,WAAY,kBAEhB,UAAW,CACP,uCAAwC,CACpC,iEAAkE,CAC9DoJ,YAAa,SAACtB,GAAD,OAAWA,EAAMhI,QAElC,mBAAoB,CAChBqF,MAAO,SAAC2C,GAAD,OAAWA,EAAMhI,SAGhC,uCAAwC,CACpC,gCAAiC,CAC7BA,MAAO,SAACgI,GAAD,4BAA0BA,EAAMhI,MAAhC,aAgCRuJ,EA1BiB,WAC5B,IAAMxI,EAAUnB,EAAU,CAAEI,MAAO,SAEnC,OACI,yBAAKyC,UAAWU,kBAAK,oBAAqBpC,EAAQoI,OAC9C,0BAAM1G,UAAU,WAEhB,kBAAC,EAAD,MAEA,kBAACjC,EAAA,EAAD,MAEA,kBAAC,IAAD,CACIgJ,KACI,kBAAC9D,EAAA,EAAD,CAAYjD,UAAU,OAAOa,KAAK,SAC9B,kBAACsC,EAAA,EAAD,mBAIR,kBAAC,IAAD,OAGJ,0BAAMnD,UAAU,aCzDbgH,EAHe,SAAC,GAAwC,IAAtC/G,EAAqC,EAArCA,MAAgBsC,GAAqB,EAA9BjE,QAA8B,EAArBiE,UAAqB,EAAXjC,KACvD,OAAO,kBAAC0F,EAAA,EAAD,CAAe/F,MAAOA,GAAQsC,ICe1B0E,IAbU,WACrB,IAAQhI,EAAaC,cAAbD,SACFiI,EACFjI,EAASiB,OAAOjB,EAAS+D,iBAAiB/C,OAE9C,OACI,kBAAC,EAAD,CAAuBA,MAAOiH,GACzBjI,EAAS+D,iBAAiB1C,MAAQ,kBAAC,EAAD,MACnC,kBAAC,EAAD,S,gKCNNnD,EAAYC,aAAW,cAAGC,QAAH,IAAe4C,EAAf,uBAA4B,CACrDkH,WAAY,CACRC,YAAa,GACbC,aAAc,IAElBC,qBAAqB,aACjBlF,SAAU,QACVmB,IAAK,EACLgE,KAAM,EACN1E,OAAQ,EACRD,MAAO,EACPrF,MAAO,QACPG,WAAY,sBACZsE,QAAS,GACR/B,EAAMuH,YAAYC,GAAG,MAAQ,CAC1B9F,QAAS,aA2CN+F,EAtCC,SAAC,GAAkB,IAAhBnF,EAAe,EAAfA,SACTjE,EAAUnB,IAChB,EAAqC+B,cAA7BD,EAAR,EAAQA,SAAU8D,EAAlB,EAAkBA,eAkBlB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CACIgC,QAAS,CAAEoB,iBAAiB,GAC5BnG,UAAWU,kBAAK,gBAAiBpC,EAAQ6I,aAExC5E,EACD,kBAAC,IAAD,CAAiBoF,MAAOC,OAG5B,yBACIhI,QAAS,kBA3BK,SAACiI,GACvB,IAAIC,EAA2B7I,EAAS+F,aAAe,WACnD+C,EAAuB9I,EAAS6I,GAEpC/E,EAAe,2BACR9D,GADO,kBAET6I,EAFS,YAAC,eAGJC,GAHG,IAINrF,YAAY,2BACLqF,EAAqBrF,aACrBmF,QAiBQG,CAAkB,CAAE/C,KAAM,WACzCjF,UAAW1B,EAAQgJ,yB,cCtD7BnK,EAAYC,aAAW,cAAGC,QAAH,uBAA4B,CACrD4K,MAAO,CACHrG,QAAS,uBAEbsG,cAAe,CACXvG,QAAS,YAoCFwG,EAhCD,SAAC,GAAkB,IAAhB5F,EAAe,EAAfA,SACPjE,EAAUnB,IAGR8H,EAFa/F,cAAbD,SACqBwD,gBAAgBC,YACrCuC,KAER,OACI,yBACIjF,UAAWU,kBAAK,oCAAqCpC,EAAQ2J,QAE7D,yBAAKjI,UAAU,qBACX,kBAAC,IAAD,MACA,0BACIA,UAAWU,kBAAK,aACZ,6CAA6C,GAC5CpC,EAAQ4J,cAAyB,YAATjD,OAKrC,yBACIjF,UAAWU,kBAAK,aACZ0H,kBAAkB,GACjB9J,EAAQ4J,cAAyB,YAATjD,KAG5B1C,GAAY,Q,2CChCvBpF,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAAY4C,EAAf,uBAA4B,CACrDoI,QAAS,gBAAG9K,EAAH,EAAGA,MAAH,EAAU+K,WAAV,EAAsBC,SAAtB,MAAsC,CAC3CnG,SAAU,QACVmB,IAAK,EACLgE,KAAM,EACN/J,OAAQ,QACRD,MAAOA,EACPoJ,UAAW1G,EAAM2G,QAAQ,GACzB4B,iBAAkB,YAClBC,mBAAoB,MACpBC,eAAgB,QAChB1G,OAAQ,IACR2G,SAAU,SACV9K,MAAOR,EAAQuL,KAAK/E,QACpBpG,WAAY,wBACZC,WAAY,UACZ,UAAW,CACPH,MAAO,uBACP,sBAAuB,CACnBoE,QAAS,SAEb,oBAAqB,CACjBpE,MAAO,OACPsL,SAAU,OACV,gBAAiB,CACblH,QAAS,SAEb,qBAAsB,CAClBA,QAAS,YAKzBuG,cAAe,CACXvG,QAAS,QAEbmH,SAAU,OA4DCC,QAAMC,MAzDE,WACnB,IAAM/I,EAAQiC,cAEd,EAAqChD,cAA7BD,EAAR,EAAQA,SAAU8D,EAAlB,EAAkBA,eAEZL,EAAczD,EAASwD,gBAAgBC,YACrCuC,EAASvC,EAATuC,KAWFqD,EAAaW,YAAgBhJ,EAAM5C,QAAQwG,QAAQD,MACnDtF,EAAUnB,EAAU,2BACnBuF,GADkB,IAErBnF,MAZoB,WACpB,OAAQ0H,GACJ,IAAK,UACD,MAAO,+BACX,QACI,MAAO,wBAORiE,GACPZ,gBAiBJ,OACI,yBAAKtI,UAAW1B,EAAQ+J,SACpB,yBAAKrI,UAAU,+BACX,kBAAC,EAAD,KACI,kBAACmJ,EAAA,EAAD,CAAQC,QAAM,GACV,kBAACC,EAAA,EAAD,CACIC,SAVI,WAVF,IAACzB,IAWL,CAAE5C,KAAe,YAATA,EAAqB,OAAS,WAVxDlC,EAAe,CACXN,gBAAiB,CACbC,YAAY,eACLmF,OAiBK0B,QAA8B,SAArB7G,EAAYuC,KACrBpH,MAAM,YACNgD,KAAK,YAIjB,kBAAC,EAAD,Y,qKC7FV1D,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAAH,uBAA4B,CACrDqJ,KAAM,CACF,6BAA8B,CAC1BhJ,WAAYL,EAAQwG,QAAQD,MAEhC,+CAAgD,CAC5C/F,MAAOR,EAAQwG,QAAQO,cAE3B,0EAA2E,CACvE1G,WAAYL,EAAQwG,QAAQC,WAiBzB0F,EAZO,WAClB,IAAMlL,EAAUnB,IAEhB,OACI,yBAAK6C,UAAWU,kBAAK,SAAUpC,EAAQoI,OACnC,yBAAK1G,UAAU,QACX,kBAAC,IAAD,CAAmByJ,WAAY7B,IAAa8B,IAAK,O,uJCnB3DvM,EAAYC,aAAW,cAAGC,QAAH,MAA4B,CACrDsM,OAAQ,CACJvH,SAAU,WACV5E,OAAQ,GACRD,MAAO,GACPiG,aAAc,MACdmD,UANqB,iBAMJC,QAAQ,GACzBW,KAAM,GACNhE,IAAK,IAETqG,aAAc,CACVxH,SAAU,WACVmF,KAAM,GACNhK,MAAO,EACPG,WAAY,0BAEhBmM,UAAW,CACPtG,IAAK,EACL/F,OAAQ,IAEZsM,UAAW,CACP1H,SAAU,WACVmB,IAAK,GACLgE,KAAM,GACN1E,OAAQ,GAEZkH,QAAS,CACLrM,WAAY,yBACZ8F,aAAc,GAElBuD,KAAM,OAgEKiD,EA7DU,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC9C7L,EAAUnB,IAEhB,OACI,yBAAK6C,UAAU,YACX,yBAAKA,UAAU,oBACTkK,GACE,yBACIlK,UAAWU,kBACPpC,EAAQuL,UACRvL,EAAQsL,gBAIpB,yBACI5J,UAAWU,kBACP,mCACApC,EAAQqL,SAGZ,yBAAK3J,UAAU,6BAEjBmK,GACE,yBACInK,UAAWU,kBACPpC,EAAQwL,UACRxL,EAAQsL,gBAIpB,yBAAK5J,UAAU,wBACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,qBACTiK,EAAa9I,OAElB,0BAAMnB,UAAU,cAAhB,MACA,kBAAC,IAAD,CAAMA,UAAU,gCAAgCoK,GAAG,KAAnD,iBAIJ,2BAAOpK,UAAU,cACZqK,YAAkB,IAAIC,KAAKL,EAAaM,YAAa,IAD1D,QAMJ,uBACIvK,UAAWU,kBACP,2BACApC,EAAQyL,UAGXE,EAAaO,WAItB,kBAACC,EAAA,EAAD,Q,sBCtFNtN,EAAYC,aAAW,cAAGC,QAAH,MAAe4C,EAAf,uBAA4B,CACrDgK,cAAY,GACR1M,MAAO,KADC,cAEP0C,EAAMuH,YAAYkD,KAAK,MAAQ,CAC5BnN,MAAO,UAHH,cAKR,0BAA2B,CACvBC,OAAQ,yBANJ,GASZmN,iBAAkB,CACd,UAAW,CACP,mBAAoB,CAChBzG,OAAQ,UACRvC,QAAS,QACTiB,MAAO,EACPgI,UAAW,EACXrH,IAAK,EACLvB,OAAQ,GAEZ,wBAAyB,CACrBL,QAAS,SAGjB,mBAAoB,CAChBA,QAAS,OACTS,SAAU,WACVQ,MAAO,EACPgI,UAAW,GAEf,0BAA2B,CACvBpH,aAAc,GACdqH,QAAS,SA+ENC,EA1EU,SAAC,GAAkB,EAAhB9M,UAAiB,IACzC,EAAkCC,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACM4B,EAAQiC,cACR3D,EAAWC,cACXF,EAAUnB,IACR8B,EAAaC,cAAbD,SACF8L,EAAkBjM,aAAY,SAACC,GAAD,OAAWA,EAAMiM,iBAE/C3L,EAAqB,WAClBjB,GACDG,EAAS0M,eAEb5M,GAAcD,IAGZ8M,EAAqBjL,EAAM5C,QAEjC,OACI,kBAAC2I,EAAA,EAAD,CAAe/F,MAAOhB,EAASiB,OAAOjB,EAASkB,cAC3C,kBAAC8C,EAAA,EAAD,CACIrD,QAASP,EACT8L,MAAO,CACHtN,MACgC,UAA5BqN,EAAmBE,KACbF,EAAmBtC,KAAKjF,UACxBuH,EAAmBtC,KAAK/E,UAGtC,kBAACJ,EAAA,EAAD,CAAO5F,MAAM,YAAYiC,aAAc,GACnC,kBAACqD,EAAA,EAAD,wBAIR,kBAAC8C,EAAA,EAAD,CACI1I,MAAO,QACP6C,QAAQ,YACRC,OAAQ,QACRC,KAAMlC,EACNmC,QAASlB,EACTmB,WAAY,CACRC,aAAa,IAGjB,yBAAKT,UAAW1B,EAAQ2L,cACpB,yBAAKjK,UAAU,2DACX,kBAACmD,EAAA,EAAD,CAAMtF,MAAM,WAAZ,iBACA,wBAAImC,UAAU,yBAAd,kBAGH+K,EAAgBpK,KAAI,SAACsJ,EAAcoB,GAAf,OACjB,kBAAC,EAAD,CACIpB,aAAcA,EACdE,YAAakB,IAAQN,EAAgBhL,OAAS,EAC9CmK,aAAsB,IAARmB,EACdzK,IAAKyK,SAGVN,EAAgBhL,QACf,yBAAKC,UAAU,mBACX,kBAACkG,EAAA,EAAD,CACIlG,UAAU,SACVI,QAAQ,YACRvC,MAAM,WAHV,+B,mDC9FtBV,EAAYC,aAAW,gBAAGC,EAAH,EAAGA,QAAY4C,EAAf,uBAA4B,CACrDyG,KAAK,aACD9I,gBAAiB,UACjB0N,YAAajO,EAAQkO,QAErB/N,OAAQ,uBACRgO,aAAc,wBACdC,WAAY,OACZC,cAAe,OACf1J,OAAQ,GACRoF,YAAa,WACZnH,EAAMuH,YAAYkD,KAAK,MAAQ,CAC5BtD,YAAa,SAGrBuE,UAAW,CACP9N,MAAOR,EAAQwG,QAAQO,cAE3BwH,SAAU,CACNC,SAAU,IACVlK,QAAS,OACT+C,WAAY,cAsGLoH,EAlGO,WAClB,IAAMxN,EAAUnB,IAChB,EAAqC+B,cAA7BD,EAAR,EAAQA,SAAU8D,EAAlB,EAAkBA,eAClB,EAAyBnE,cAAjBmN,EAAR,EAAQA,OAAQpN,EAAhB,EAAgBA,KAqBhB,OACI,yBAAKqB,UAAWU,kBAAK,kBAAmBpC,EAAQoI,OAC5C,yBAAK1G,UAAU,4CACX,yBAAKA,UAAU,4BACX,yBACIA,UAAU,OACVgB,IAAKgL,IACL9K,IAAI,iBAER,0BACIlB,UAAWU,kBACP,2BACApC,EAAQqN,cAKpB,yBAAK3L,UAAU,YACf,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAAiBiM,UAAU,QACvB,kBAAC,IAAD,MACA,kBAAC,EAAD,MAEA,kBAAClO,EAAA,EAAD,MAEA,kBAAC,IAAD,CACImO,WACI,kBAACC,EAAA,EAAD,CACInM,UAAU,sBACVgB,IAAKrC,EAAKyN,UAIlB,kBAACC,EAAA,EAAD,CAAUrM,UAAW1B,EAAQsN,UACzB,kBAACzI,EAAA,EAAD,eACA,0BAAMnD,UAAU,QAAhB,WAEJ,kBAACqM,EAAA,EAAD,KACI,kBAAC,IAAD,CACIrM,UAAW1B,EAAQsN,SACnBxB,GAAG,8BAEH,kBAACjH,EAAA,EAAD,iBACA,0BAAMnD,UAAU,QAAhB,eAGR,kBAACqM,EAAA,EAAD,CAAUrM,UAAW1B,EAAQsN,UACzB,kBAACzI,EAAA,EAAD,mBACA,0BAAMnD,UAAU,QAAhB,eAEJ,kBAACqM,EAAA,EAAD,CACIzM,QAASmM,EACT/L,UAAW1B,EAAQsN,UAEnB,kBAACzI,EAAA,EAAD,6BACA,0BAAMnD,UAAU,QAAhB,eAKZ,kBAACmJ,EAAA,EAAD,CAAQmD,MAAI,GACR,kBAACrJ,EAAA,EAAD,CACIjD,UAAU,aACVJ,QAxEI,WACxB,IAXuBiI,EAanB5C,EACqC,UAHfhG,EAApBoG,gBAGc3C,YAAYuC,KAAmB,SAAW,QAdvC4C,EAgBL,CAAE5C,QAfpBlC,EAAe,CACXsC,gBAAiB,CACb3C,YAAY,eACLmF,QAgFK,kBAAC1E,EAAA,EAAD,mB,6DC5HfoJ,EAAgBnP,aAAW,cAAGC,QAAH,uBAA4B,CAChE,UAAW,CACP,WAAY,CACRI,WAAY,kBAEhB,kCAAmC,CAAE8J,KAAM,yBAC3C,mBAAoB,CAChBnF,SAAU,WACV5E,OAAQ,uBACRmJ,UAAW,sBACX3E,OAAQ,MAEZ,qBAAsB,CAClBJ,QAAS,IACTE,OAAQ,IACR0K,UAAW,OACXpK,SAAU,YAEd,0BAA2B,CACvBqK,MAAO,OACPpF,aAAc,OACdqF,WAAY,QACZ1K,OAAQ,MAEZ,+BAAgC,CAAEyK,MAAO,QACzC,mFAAoF,CAChFjB,aAAc,YACdhO,OAAQ,OACRmP,UAAW,aACXrB,YAAa,cACbxJ,OAAQ,SAEZ,wBAAyB,CACrBM,SAAU,WACVN,OAAQ,MACRH,QAAS,gBAEb,6BAA8B,CAAEC,QAAS,WAAYpE,OAAQ,QAC7D,2CAA4C,CACxCmE,QAAS,OACTE,cAAe,MACf6C,WAAY,SACZ9C,QAAS,YACTpE,OAAQ,uBACR8D,SAAU,WACVsL,eAAgB,OAChBD,UAAW,cAEf,2EAA4E,CACxErL,SAAU,OACVQ,OAAQ,SAEZ,wBAAyB,CACrB+I,QAAS,IACTgC,WAAY,SACZzK,SAAU,WACVmF,KAAM,OACNZ,UAAW,sBACXpD,IAAK,uBACLS,UAAW,oBACXvG,WAAY,uBACZuE,OAAQ,MAEZ,sHAAuH,CACnH6I,QAAS,IACTgC,WAAY,UACZ7I,UAAW,iBAEf,2BAA4B,CACxBzG,MAAO,QACPkP,MAAO,OACP9K,QAAS,YACTS,SAAU,YAEd,2BAA4B,CAAEmB,IAAK,IAAKgE,KAAM,SAC9C,8BAA+B,CAAEnF,SAAU,WAAYmB,IAAK,KAC5D,+BAAgC,CAC5BuJ,QAAS,oBACTC,WAAY,mBACZhJ,WAAY,SACZiJ,UAAW,SACX1L,SAAU,OACV2L,WAAY,IACZP,WAAY,OACZvI,cAAe,SACf+I,cAAe,OACfvL,QAAS,eACTwL,WAAY,SACZC,SAAU,SACVC,UAAW,MACXC,EAAG,cACHC,UAAW,CAAC,CAAED,EAAG,YAErB,0CAA2C,CAAER,QAAS,Y,sBCO/CU,UArFC,WAAO,IAAD,EAElBjB,IAEA,IAAMtM,EAAQiC,cACNuL,EAAWC,qBAAWC,KAAtBF,OACAxO,EAAaC,cAAbD,SAEFoG,EAAoBpG,EAApBoG,gBACFuI,EAAc3O,EAASiB,OAAOmF,EAAgBF,OAAOlF,OACrD4N,EAAc5O,EAASiB,OAAOmF,EAAgByI,OAAO7N,OACzD,EAEIoF,EADA3C,YAAqBqL,EADzB,EACmB9I,KAAyB+I,EAD5C,EACsCC,KAGlCC,GAAa,mBACZjP,EAAS+F,cAAe,GADZ,cAEb,2BAA2B,GAFd,gCAGDK,EAAgB3C,YAAYuC,OAAS,GAHpC,+BAIFI,EAAgBJ,KAJd,kBAI4BhF,EAAM5C,QAAQ+N,OAAS,GAJnD,GAOjB,OACI,kBAAC,WAAD,KACI,yBACIpL,UAAWU,kBACPwN,EACA,iEAGH7I,EAAgBF,OAAO8I,MACpB,kBAACjI,EAAA,EAAD,CAAe/F,MAAO2N,GAClB,kBAAC,EAAD,OAIR,kBAACzE,EAAA,EAAD,CAAQC,QAAM,GACT/D,EAAgByI,OAAOG,MACpB,kBAACjI,EAAA,EAAD,CAAe/F,MAAO4N,GAClB,kBAAC,EAAD,QAKXG,GAA+B,UAAhBD,GACZ,kBAACzL,GAAA,EAAD,KACI,kBAAC6L,GAAA,EAAD,OAIPlP,EAASmP,kBACN,kBAAC,IAAD,CACIrJ,QAAS,CAAEoB,iBAAiB,GAC5BnG,UAAU,kCAEV,yBAAKA,UAAU,0BACVqO,YAAaZ,IAEjBxO,EAASwC,OAAOwM,OAAShP,EAASwC,OAAO2D,OACtC,kBAACnD,EAAA,EAAD,QAKVhD,EAASmP,kBACP,yBACIrJ,QAAS,CAAEoB,iBAAiB,GAC5BnG,UAAU,+CAEV,yBAAKA,UAAU,0BACVqO,YAAaZ,IAEjBxO,EAASwC,OAAOwM,OAAShP,EAASwC,OAAO2D,OACtC,kBAACnD,EAAA,EAAD,OAKXhD,EAASwC,OAAOwM,MAAQhP,EAASwC,OAAO2D,OAAS,kBAACnD,EAAA,EAAD,OAErDhD,EAAS+D,iBAAiBiL,MAAQ,kBAAChH,EAAA,EAAD","file":"static/js/54.ce3eaaa0.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport useAuth from 'app/hooks/useAuth'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    miniCart: {\n        width: 'var(--sidenav-width)',\n        '& .cart__topbar': {\n            height: 'var(--topbar-height)',\n        },\n        '& .mini-cart__item': {\n            transition: 'background 300ms ease',\n            '&:hover': {\n                background: 'rgba(0,0,0,0.01)',\n            },\n        },\n    },\n    customBadge: {\n        backgroundColor: \"#ddd\",\n        color: \"#000\"\n        },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            history.push('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n\n        setTotalCost(total)\n    }, [cartList])\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" classes={{badge: classes.customBadge}} badgeContent={cartList.length}>\n                    <Icon className='text-muted'>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx('flex-column h-full', classes.miniCart)}\n                    >\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\n                        </div>\n\n                        <div className=\"flex-grow overflow-auto\">\n                            {cartList.map((product) => (\n                                <div\n                                    key={product.id}\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\n                                >\n                                    <div className=\"flex flex-column mr-1\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                    <div className=\"mr-2\">\n                                        <img\n                                            className=\"w-48\"\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </div>\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\n                                            {product.title}\n                                        </h6>\n                                        <small className=\"text-muted\">\n                                            ${product.price} x {product.amount}\n                                        </small>\n                                    </div>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </IconButton>\n                                </div>\n                            ))}\n                        </div>\n\n                        <Button\n                            className=\"w-full border-radius-0\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React from 'react'\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles'\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    footer: {\n        minHeight: 'var(--topbar-height)',\n        '@media (max-width: 499px)': {\n            display: 'table',\n            width: '100%',\n            minHeight: 'auto',\n            padding: '1rem 0',\n            '& .container': {\n                flexDirection: 'column !important',\n                '& a': {\n                    margin: '0 0 16px !important',\n                },\n            },\n        },\n    },\n    appbar: {\n        zIndex: 96,\n    },\n}))\n\nconst Footer = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return (\n        <ThemeProvider theme={footerTheme}>\n            <AppBar\n                color=\"primary\"\n                position=\"static\"\n                className={classes.appbar}\n            >\n                <Toolbar className={clsx('flex items-center', classes.footer)}>\n                    <div className=\"flex items-center container w-full\">\n                        {/* <a\n              href=\"https://github.com/uilibrary/matx-react\"\n              target=\"_blank\"\n              className=\"mr-2\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button variant=\"contained\">Download Free version</Button>\n            </a> */}\n                        <a href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                                Get MatX Pro\n                            </Button>\n                        </a>\n                        <span className=\"m-auto\"></span>\n                        <p className=\"m-0\">\n                            Design and Developed by{' '}\n                            <a href=\"http://ui-lib.com\">UI Lib</a>\n                        </p>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </ThemeProvider>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { Fab, IconButton, Icon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    toggle: {\n        position: 'fixed',\n        right: '30px',\n        bottom: '50px',\n        zIndex: 99,\n        transition: 'all 0.15s ease',\n        '&.open': {\n            right: '10px',\n        },\n    },\n}))\n\nconst SecondarySidebarToggle = () => {\n    // const isMobile = useMediaQuery(\"(max-width:767px)\");\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const toggle = () => {\n        updateSettings({\n            secondarySidebar: { open: !settings.secondarySidebar.open },\n        })\n    }\n\n    // useEffect(() => {\n    //   updateSettings({\n    //     secondarySidebar: { open: !isMobile },\n    //   });\n    // }, [isMobile]);\n\n    return (\n        <div\n            className={clsx({\n                [classes.toggle]: true,\n                open: settings.secondarySidebar.open,\n            })}\n        >\n            {settings.secondarySidebar.open && (\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n                    <Icon>close</Icon>\n                </IconButton>\n            )}\n            {!settings.secondarySidebar.open && (\n                <Fab\n                    // variant=\"extended\"\n                    // size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"expand\"\n                    className=\"\"\n                    onClick={toggle}\n                >\n                    <Icon>settings</Icon>\n                </Fab>\n            )}\n        </div>\n    )\n}\n\nexport default SecondarySidebarToggle\n","import { Badge } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst BadgeSelected = withStyles((theme) => ({\n    badge: {\n        top: '0',\n        right: '0',\n        height: '32px',\n        width: '32px',\n        borderRadius: '50%',\n    },\n}))(Badge)\n\nexport default BadgeSelected\n","import React, { Fragment, useState } from 'react'\nimport {\n    Icon,\n    IconButton,\n    Button,\n    // FormGroup,\n    // Switch,\n    // FormControlLabel,\n    // FormControl,\n    // FormLabel,\n    Card,\n    Tooltip,\n    Drawer,\n    Link,\n} from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\n// import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from './BadgeSelected'\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    label: {\n        color: palette.secondary.main,\n        backgroundColor: palette.primary.dark,\n        fontWeight: 700,\n        transform: 'rotate(90deg)',\n        marginBottom: '2.5rem',\n        padding: '.25rem .5rem',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        letterSpacing: '1.5px',\n        fontSize: '1rem',\n        '&:hover, &.open': {\n            backgroundColor: palette.secondary.main,\n            color: palette.secondary.contrastText,\n        },\n    },\n    helpText: {\n        margin: '0px .5rem 1rem',\n    },\n    maxCustomizer: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        zIndex: 50,\n    },\n    customizerCloseButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    layoutBox: {\n        '&:hover': {\n            '& .layout-name': {\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                width: '100%',\n                background: 'rgba(0,0,0,0.3)',\n                zIndex: 12,\n            },\n        },\n    },\n}))\n\nconst MatxCustomizer = (props) => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    // const handleChange = (name, value) => {\n    //   let updatedSettings = set(settings, name, value);\n\n    //   updateSettings(updatedSettings);\n    // };\n\n    // const handleControlChange = (name) => (event) => {\n    //   let controlValue =\n    //     event.target.type === \"checkbox\"\n    //       ? event.target.checked\n    //       : event.target.value;\n    //   handleChange(name, controlValue);\n    // };\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\n                <span\n                    className={clsx({ [classes.label]: true, open })}\n                    onClick={tooglePanel}\n                >\n                    DEMOS\n                </span>\n            </Tooltip>\n\n            {/* {open && ( */}\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx(\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\n                            classes.maxCustomizer\n                        )}\n                    >\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\n                            <Icon color=\"primary\">settings</Icon>\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\n                            <IconButton\n                                onClick={tooglePanel}\n                                className={classes.customizerCloseButton}\n                            >\n                                <Icon>close</Icon>\n                            </IconButton>\n                        </div>\n                        <div className=\"px-6 mb-4 flex\">\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(0)}\n                                className=\"mr-4\"\n                            >\n                                Demos\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(1)}\n                            >\n                                Settings\n                            </Button>\n                        </div>\n\n                        <Scrollbar\n                            options={{ suppressScrollX: true }}\n                            className=\"px-4\"\n                        >\n                            {tabIndex === 0 && (\n                                <div className=\"mb-8 mx-2\">\n                                    <div className=\"text-muted\">Layouts</div>\n\n                                    <div className=\"flex-column\">\n                                        {demoLayouts.map((layout) => (\n                                            <BadgeSelected\n                                                color=\"secondary\"\n                                                className={clsx(\n                                                    'w-full my-3 max-h-152 cursor-pointer',\n                                                    classes.layoutBox\n                                                )}\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    className=\"relative\"\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <div className=\"layout-name hidden\">\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </div>\n\n                                                    <img\n                                                        className=\"w-full\"\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </BadgeSelected>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* END LAYOUT */}\n\n                            {tabIndex === 1 && (\n                                <div>\n                                    <div className={classes.helpText}>\n                                        We used React context API to control\n                                        layout. Check out the{' '}\n                                        <Link\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\n                                            target=\"_blank\"\n                                        >\n                                            Documentation\n                                        </Link>\n                                    </div>\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">Main theme</div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {mainThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() =>\n                              updateSettings({ activeTheme: color })\n                            }\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.activeTheme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n\n                                    {/* {settings.activeLayout === \"layout1\" && (\n                    <Layout1Customizer\n                      settings={settings}\n                      handleChange={handleChange}\n                      handleControlChange={handleControlChange}\n                    />\n                  )}\n\n                  {settings.activeLayout === \"layout2\" && (\n                    <Layout2Customizer\n                      settings={settings}\n                      handleChange={handleChange}\n                      handleControlChange={handleControlChange}\n                    />\n                  )} */}\n\n                                    {/* <div className=\"mx-2 mb-6\">\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Footer</FormLabel>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(settings.footer, \"show\")}\n                              onChange={handleControlChange(\"footer.show\")}\n                            />\n                          }\n                          label=\"Show\"\n                        />\n\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(\n                                settings.layout1Settings.footer,\n                                \"fixed\"\n                              )}\n                              onChange={handleControlChange(\"footer.fixed\")}\n                            />\n                          }\n                          label=\"Fixed\"\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </div> */}\n\n                                    {/* <div className=\"mx-2 mb-6\">\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">\n                        Secondary sidebar\n                      </FormLabel>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(settings.secondarySidebar, \"show\")}\n                              onChange={handleControlChange(\n                                \"secondarySidebar.show\"\n                              )}\n                            />\n                          }\n                          label=\"Show\"\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </div> */}\n\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">\n                      Secondary sidebar theme\n                    </div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {topbarThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() =>\n                              handleChange(\"secondarySidebar.theme\", color)\n                            }\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.secondarySidebar.theme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">Footer theme</div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {topbarThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() => handleChange(\"footer.theme\", color)}\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.footer.theme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n                                </div>\n                            )}\n                        </Scrollbar>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n            {/* )} */}\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Theme',\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'purpleDark1',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'purpleDark1',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Horizontal Navigation',\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'purple1',\n            layout2Settings: {\n                mode: 'full',\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n","import React from 'react'\nimport { IconButton, Icon } from '@material-ui/core'\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { ChatHead } from 'app/components'\nimport { Chatbox } from 'app/components'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    root: {\n        position: 'fixed',\n        height: '100vh',\n        width: (props) => props.width,\n        right: 0,\n        bottom: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxShadow: theme.shadows[8],\n        backgroundColor: palette.primary.main,\n        zIndex: 98,\n        transition: 'all 0.15s ease',\n    },\n    '@global': {\n        '@media screen and (min-width: 767px)': {\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n                marginRight: (props) => props.width,\n            },\n            '.matx-customizer': {\n                right: (props) => props.width,\n            },\n        },\n        '@media screen and (max-width: 959px)': {\n            '.toolbar-menu-wrap .menu-area': {\n                width: (props) => `calc(100% - ${props.width})`,\n            },\n        },\n    },\n}))\n\nconst SecondarySidebarContent = () => {\n    const classes = useStyles({ width: '50px' })\n\n    return (\n        <div className={clsx('secondary-sidebar', classes.root)}>\n            <span className=\"m-auto\"></span>\n\n            <MatxCustomizer />\n\n            <ShoppingCart />\n\n            <ChatHead\n                icon={\n                    <IconButton className=\"my-3\" size=\"small\">\n                        <Icon>comments</Icon>\n                    </IconButton>\n                }\n            >\n                <Chatbox />\n            </ChatHead>\n\n            <span className=\"m-auto\"></span>\n        </div>\n    )\n}\n\nexport default SecondarySidebarContent\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\nexport default SecondarySidenavTheme\n","import React from 'react'\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\nimport SecondarySidebarContent from './SecondarySidebarContent'\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SecondarySidebar = () => {\n    const { settings } = useSettings()\n    const secondarySidebarTheme =\n        settings.themes[settings.secondarySidebar.theme]\n\n    return (\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\n            <SecondarySidebarToggle />\n        </SecondarySidenavTheme>\n    )\n}\n\nexport default SecondarySidebar\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    scrollable: {\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    sidenavMobileOverlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: '100vw',\n        background: 'rgba(0, 0, 0, 0.54)',\n        zIndex: -1,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <Scrollbar\n                options={{ suppressScrollX: true }}\n                className={clsx('relative px-4', classes.scrollable)}\n            >\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </Scrollbar>\n\n            <div\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n                className={classes.sidenavMobileOverlay}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    brand: {\n        padding: '20px 18px 20px 29px',\n    },\n    hideOnCompact: {\n        display: 'none',\n    },\n}))\n\nconst Brand = ({ children }) => {\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <div\n            className={clsx('flex items-center justify-between', classes.brand)}\n        >\n            <div className=\"flex items-center\">\n                <MatxLogo />\n                <span\n                    className={clsx({\n                        'text-18 ml-2 font-medium sidenavHoverShow': true,\n                        [classes.hideOnCompact]: mode === 'compact',\n                    })}\n                >\n                </span>\n            </div>\n            <div\n                className={clsx({\n                    sidenavHoverShow: true,\n                    [classes.hideOnCompact]: mode === 'compact',\n                })}\n            >\n                {children || null}\n            </div>\n        </div>\n    )\n}\n\nexport default Brand\n","import React from 'react'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\n\nimport Sidenav from '../../Sidenav/Sidenav'\nimport Brand from '../../Brand/Brand'\nimport { Switch, Hidden } from '@material-ui/core'\nimport { convertHexToRGB } from 'utils'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    sidenav: ({ width, primaryRGB, bgImgURL }) => ({\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: width,\n        boxShadow: theme.shadows[8],\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top',\n        backgroundSize: 'cover',\n        zIndex: 111,\n        overflow: 'hidden',\n        color: palette.text.primary,\n        transition: 'all 250ms ease-in-out',\n        background: '#191919',\n        '&:hover': {\n            width: 'var(--sidenav-width)',\n            '& .sidenavHoverShow': {\n                display: 'block',\n            },\n            '& .compactNavItem': {\n                width: '100%',\n                maxWidth: '100%',\n                '& .nav-bullet': {\n                    display: 'block',\n                },\n                '& .nav-bullet-text': {\n                    display: 'none',\n                },\n            },\n        },\n    }),\n    hideOnCompact: {\n        display: 'none',\n    },\n    userInfo: {},\n}))\n\nconst Layout1Sidenav = () => {\n    const theme = useTheme()\n\n    const { settings, updateSettings } = useSettings()\n\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    const getSidenavWidth = () => {\n        switch (mode) {\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return 'var(--sidenav-width)'\n        }\n    }\n\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\n    const classes = useStyles({\n        ...leftSidebar,\n        width: getSidenavWidth(),\n        primaryRGB,\n    })\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidenavToggle = () => {\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\n    }\n\n    return (\n        <div className={classes.sidenav}>\n            <div className=\"flex-column relative h-full\">\n                <Brand>\n                    <Hidden smDown>\n                        <Switch\n                            onChange={handleSidenavToggle}\n                            checked={leftSidebar.mode !== 'full'}\n                            color=\"secondary\"\n                            size=\"small\"\n                        />\n                    </Hidden>\n                </Brand>\n                <Sidenav />\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Sidenav)\n","import React from 'react'\nimport { MatxHorizontalNav } from 'app/components'\nimport { navigations } from '../../../navigations'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    root: {\n        '&, & .horizontal-nav ul ul': {\n            background: palette.primary.main,\n        },\n        '& .horizontal-nav a, & .horizontal-nav label': {\n            color: palette.primary.contrastText,\n        },\n        '& .horizontal-nav ul li ul li:hover, & .horizontal-nav ul li ul li.open': {\n            background: palette.primary.dark,\n        },\n    },\n}))\n\nconst Layout2Navbar = () => {\n    const classes = useStyles()\n\n    return (\n        <div className={clsx('navbar', classes.root)}>\n            <div className=\"pl-6\">\n                <MatxHorizontalNav navigation={navigations} max={6} />\n            </div>\n        </div>\n    )\n}\n\nexport default Layout2Navbar\n","import React from 'react'\nimport { getTimeDifference } from 'utils'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { Divider } from '@material-ui/core'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    circle: {\n        position: 'absolute',\n        height: 16,\n        width: 16,\n        borderRadius: '50%',\n        boxShadow: theme.shadows[3],\n        left: 18,\n        top: 23,\n    },\n    verticalLine: {\n        position: 'absolute',\n        left: 25,\n        width: 2,\n        background: 'rgba(var(--body), 0.1)',\n    },\n    upperLine: {\n        top: 0,\n        height: 23,\n    },\n    lowerLine: {\n        position: 'absolute',\n        top: 40,\n        left: 25,\n        bottom: 0,\n    },\n    lightBG: {\n        background: 'rgba(var(--body),0.03)',\n        borderRadius: 4,\n    },\n    icon: {},\n}))\n\nconst NotificationCard = ({ notification, isFirstIndex, isLastIndex }) => {\n    const classes = useStyles()\n    // console.log(notification);\n    return (\n        <div className=\"relative\">\n            <div className=\"pl-12 pr-8 py-6\">\n                {!isFirstIndex && (\n                    <div\n                        className={clsx(\n                            classes.upperLine,\n                            classes.verticalLine\n                        )}\n                    ></div>\n                )}\n                <div\n                    className={clsx(\n                        'flex items-center justify-center',\n                        classes.circle\n                    )}\n                >\n                    <div className=\"p-1 bg-primary rounded\"></div>\n                </div>\n                {!isLastIndex && (\n                    <div\n                        className={clsx(\n                            classes.lowerLine,\n                            classes.verticalLine\n                        )}\n                    ></div>\n                )}\n                <div className=\"flex justify-between\">\n                    <div className=\"text-13\">\n                        <h5 className=\"mt-0 mb-1 text-14\">\n                            {notification.title}\n                        </h5>\n                        <span className=\"text-muted\">on</span>\n                        <Link className=\"ml-1 text-primary font-medium\" to=\"/\">\n                            Project Name\n                        </Link>\n                    </div>\n                    <small className=\"text-muted\">\n                        {getTimeDifference(new Date(notification.timestamp))}{' '}\n                        ago\n                    </small>\n                </div>\n\n                <p\n                    className={clsx(\n                        'my-2 py-6px px-3 text-14',\n                        classes.lightBG\n                    )}\n                >\n                    {notification.subtitle}\n                </p>\n            </div>\n\n            <Divider />\n        </div>\n    )\n}\n\nexport default NotificationCard\n","import React from 'react'\nimport { Icon, Badge, Button, IconButton, Drawer } from '@material-ui/core'\nimport { ThemeProvider, useTheme } from '@material-ui/core/styles'\nimport { getNotification } from '../../redux/actions/NotificationActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport NotificationCard from './NotificationCard'\nimport { useState } from 'react'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    notification: {\n        width: 360,\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw',\n        },\n        '& .notification__topbar': {\n            height: 'var(--topbar-height)',\n        },\n    },\n    notificationCard: {\n        '&:hover': {\n            '& .delete-button': {\n                cursor: 'pointer',\n                display: 'unset',\n                right: 0,\n                marginTop: 6,\n                top: 0,\n                zIndex: 2,\n            },\n            '& .card__topbar__time': {\n                display: 'none',\n            },\n        },\n        '& .delete-button': {\n            display: 'none',\n            position: 'absolute',\n            right: 0,\n            marginTop: 9,\n        },\n        '& .card__topbar__button': {\n            borderRadius: 15,\n            opacity: 0.9,\n        },\n    },\n}))\n\nconst NotificationBar2 = ({ container }) => {\n    const [panelOpen, setPanelOpen] = useState(false)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const notifcationList = useSelector((state) => state.notifications)\n\n    const handleDrawerToggle = () => {\n        if (!panelOpen) {\n            dispatch(getNotification())\n        }\n        setPanelOpen(!panelOpen)\n    }\n\n    const parentThemePalette = theme.palette\n\n    return (\n        <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n            <IconButton\n                onClick={handleDrawerToggle}\n                style={{\n                    color:\n                        parentThemePalette.type === 'light'\n                            ? parentThemePalette.text.secondary\n                            : parentThemePalette.text.primary,\n                }}\n            >\n                <Badge color=\"secondary\" badgeContent={5}>\n                    <Icon>notifications</Icon>\n                </Badge>\n            </IconButton>\n\n            <Drawer\n                width={'100px'}\n                variant=\"temporary\"\n                anchor={'right'}\n                open={panelOpen}\n                onClose={handleDrawerToggle}\n                ModalProps={{\n                    keepMounted: true,\n                }}\n            >\n                <div className={classes.notification}>\n                    <div className=\"notification__topbar elevation-z6 flex items-center p-4\">\n                        <Icon color=\"primary\">notifications</Icon>\n                        <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\n                    </div>\n\n                    {notifcationList.map((notification, ind) => (\n                        <NotificationCard\n                            notification={notification}\n                            isLastIndex={ind === notifcationList.length - 1}\n                            isFirstIndex={ind === 0}\n                            key={ind}\n                        />\n                    ))}\n                    {!!notifcationList.length && (\n                        <div className=\"text-center m-8\">\n                            <Button\n                                className=\"w-full\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                View All Notifications\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Drawer>\n        </ThemeProvider>\n    )\n}\n\nexport default NotificationBar2\n","import React from 'react'\nimport { Icon, IconButton, Hidden, MenuItem, Avatar } from '@material-ui/core'\nimport { MatxMenu, MatxToolbarMenu, MatxSearchBox } from 'app/components'\nimport NotificationBar2 from '../../NotificationBar2/NotificationBar2'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\nimport useAuth from 'app/hooks/useAuth'\nimport sitelogo from '../../../../sitelogo.svg'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    root: {\n        backgroundColor: '#1D1D1D',\n        borderColor: palette.divider,\n        // display: \"table\",\n        height: 'var(--topbar-height)',\n        borderBottom: '1px solid transparent',\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        zIndex: 98,\n        paddingLeft: '1.75rem',\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: '1rem',\n        },\n    },\n    brandText: {\n        color: palette.primary.contrastText,\n    },\n    menuItem: {\n        minWidth: 185,\n        display: 'flex',\n        alignItems: 'center',\n    },\n}))\n\nconst Layout2Topbar = () => {\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout2Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout2Settings } = settings\n\n        let mode =\n            layout2Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close'\n\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <div className={clsx('relative w-full', classes.root)}>\n            <div className=\"flex justify-between items-center h-full\">\n                <div className=\"flex items-center h-full\">\n                    <img\n                        className=\"h-32\"\n                        src={sitelogo}\n                        alt=\"company-logo\"\n                    />\n                    <span\n                        className={clsx(\n                            'font-medium text-24 mx-4',\n                            classes.brandText\n                        )}\n                    >\n                    </span>\n                </div>\n                <div className=\"mx-auto\"></div>\n                <div className=\"flex items-center\">\n                    <MatxToolbarMenu offsetTop=\"64px\">\n                        <MatxSearchBox />\n                        <NotificationBar2 />\n\n                        <ShoppingCart />\n\n                        <MatxMenu\n                            menuButton={\n                                <Avatar\n                                    className=\"cursor-pointer mx-2\"\n                                    src={user.avatar}\n                                />\n                            }\n                        >\n                            <MenuItem className={classes.menuItem}>\n                                <Icon> home </Icon>\n                                <span className=\"pl-4\"> Home </span>\n                            </MenuItem>\n                            <MenuItem>\n                                <Link\n                                    className={classes.menuItem}\n                                    to=\"/page-layouts/user-profile\"\n                                >\n                                    <Icon> person </Icon>\n                                    <span className=\"pl-4\"> Profile </span>\n                                </Link>\n                            </MenuItem>\n                            <MenuItem className={classes.menuItem}>\n                                <Icon> settings </Icon>\n                                <span className=\"pl-4\"> Settings </span>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={logout}\n                                className={classes.menuItem}\n                            >\n                                <Icon> power_settings_new </Icon>\n                                <span className=\"pl-4\"> Logout </span>\n                            </MenuItem>\n                        </MatxMenu>\n                    </MatxToolbarMenu>\n\n                    <Hidden mdUp>\n                        <IconButton\n                            className=\"text-white\"\n                            onClick={handleSidebarToggle}\n                        >\n                            <Icon>menu</Icon>\n                        </IconButton>\n                    </Hidden>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Layout2Topbar\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const layout2Styles = makeStyles(({ palette, ...theme }) => ({\n    '@global': {\n        '.layout2': {\n            transition: 'all 0.15s ease',\n        },\n        '.layout2.sidenav-close .sidenav': { left: '-var(--sidenav-width)' },\n        '.layout2 .navbar': {\n            position: 'relative',\n            height: 'var(--navbar-height)',\n            boxShadow: 'var(--elevation-z8)',\n            zIndex: '98',\n        },\n        '.horizontal-nav ul': {\n            padding: '0',\n            margin: '0',\n            listStyle: 'none',\n            position: 'relative',\n        },\n        '.horizontal-nav ul.menu': {\n            float: 'left',\n            paddingRight: '45px',\n            marginLeft: '-20px',\n            zIndex: '99',\n        },\n        '.horizontal-nav ul.menu > li': { float: 'left' },\n        '.horizontal-nav ul.menu > li > div > a, .horizontal-nav ul.menu > li > div > div': {\n            borderBottom: '2px solid',\n            height: '48px',\n            boxSizing: 'border-box',\n            borderColor: 'transparent',\n            margin: '0 6px',\n        },\n        '.horizontal-nav ul li': {\n            position: 'relative',\n            margin: '0px',\n            display: 'inline-block',\n        },\n        '.horizontal-nav ul li ul a': { padding: '8px 20px', height: '48px' },\n        '.horizontal-nav a, .horizontal-nav label': {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            padding: '13px 20px',\n            height: 'var(--navbar-height)',\n            fontSize: '0.875rem',\n            textDecoration: 'none',\n            boxSizing: 'border-box',\n        },\n        '.horizontal-nav a .material-icons, .horizontal-nav label .material-icons': {\n            fontSize: '14px',\n            margin: '0 4px',\n        },\n        '.horizontal-nav ul ul': {\n            opacity: '0',\n            visibility: 'hidden',\n            position: 'absolute',\n            left: '20px',\n            boxShadow: 'var(--elevation-z8)',\n            top: 'var(--navbar-height)',\n            transform: 'translateY(-10px)',\n            transition: 'all 0.3s ease-in-out',\n            zIndex: '-1',\n        },\n        '.horizontal-nav ul li:hover > div > div > ul, .horizontal-nav ul li:hover > div > ul, .horizontal-nav li:hover > ul': {\n            opacity: '1',\n            visibility: 'visible',\n            transform: 'translateY(0)',\n        },\n        '.horizontal-nav ul ul li': {\n            width: '170px',\n            float: 'none',\n            display: 'list-item',\n            position: 'relative',\n        },\n        '.horizontal-nav ul ul ul': { top: '0', left: '170px' },\n        '.horizontal-nav ul ul ul li': { position: 'relative', top: '0' },\n        '.horizontal-nav li > a:after': {\n            content: '\"arrow_drop_down\"',\n            fontFamily: '\"Material Icons\"',\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            fontSize: '14px',\n            lineHeight: '1',\n            marginLeft: 'auto',\n            letterSpacing: 'normal',\n            textTransform: 'none',\n            display: 'inline-block',\n            whiteSpace: 'nowrap',\n            wordWrap: 'normal',\n            direction: 'ltr',\n            W: 'antialiased',\n            fallbacks: [{ W: '\"liga\"' }],\n        },\n        '.horizontal-nav li > a:only-child:after': { content: '\" \"' },\n    },\n}))\n","import React, { Fragment, useContext } from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { Hidden } from '@material-ui/core'\nimport AppContext from 'app/contexts/AppContext'\nimport Footer from '../../Footer/Footer'\nimport Layout2Navbar from './Layout2Navbar'\nimport Layout2Topbar from './Layout2Topbar'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport { renderRoutes } from 'react-router-config'\nimport { useTheme } from '@material-ui/styles'\nimport clsx from 'clsx'\nimport { layout2Styles } from 'app/components/MatxLayout/Layout2/layout2.style'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport Layout1Sidenav from '../Layout1/Layout1Sidenav'\nimport useSettings from 'app/hooks/useSettings'\n\nconst Layout2 = () => {\n    // import layout2 styels\n    layout2Styles()\n\n    const theme = useTheme()\n    const { routes } = useContext(AppContext)\n    const { settings } = useSettings()\n\n    let { layout2Settings } = settings\n    let topbarTheme = settings.themes[layout2Settings.topbar.theme]\n    let navbarTheme = settings.themes[layout2Settings.navbar.theme]\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout2Settings\n\n    let layoutClasses = {\n        [settings.activeLayout]: true,\n        'bg-default text-primary': true,\n        [`sidenav-${layout2Settings.leftSidebar.mode}`]: true,\n        [`layout-${layout2Settings.mode} theme-${theme.palette.type}`]: true,\n    }\n\n    return (\n        <Fragment>\n            <div\n                className={clsx(\n                    layoutClasses,\n                    'flex-grow flex-column relative overflow-hidden h-full-screen'\n                )}\n            >\n                {layout2Settings.topbar.show && (\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout2Topbar />\n                    </ThemeProvider>\n                )}\n\n                <Hidden smDown>\n                    {layout2Settings.navbar.show && (\n                        <ThemeProvider theme={navbarTheme}>\n                            <Layout2Navbar />\n                        </ThemeProvider>\n                    )}\n                </Hidden>\n\n                {showSidenav && sidenavMode !== 'close' && (\n                    <SidenavTheme>\n                        <Layout1Sidenav />\n                    </SidenavTheme>\n                )}\n\n                {settings.perfectScrollbar && (\n                    <Scrollbar\n                        options={{ suppressScrollX: true }}\n                        className=\"flex-column flex-grow relative\"\n                    >\n                        <div className=\"flex-grow relative p-0\">\n                            {renderRoutes(routes)}\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </Scrollbar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <div\n                        options={{ suppressScrollX: true }}\n                        className=\"flex-column flex-grow relative scroll-y p-0\"\n                    >\n                        <div className=\"flex-grow relative p-0\">\n                            {renderRoutes(routes)}\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </div>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </Fragment>\n    )\n}\n\nexport default Layout2\n"],"sourceRoot":""}