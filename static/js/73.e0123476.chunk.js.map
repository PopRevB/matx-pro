{"version":3,"sources":["app/views/inbox/InboxMessagList.jsx","app/views/inbox/InboxComposeDialog.jsx","app/views/inbox/InboxSidenav.jsx","app/views/inbox/InboxTopbar.jsx","app/views/inbox/AppInbox.jsx","app/views/inbox/InboxService.js"],"names":["InboxMessageList","messageList","handleCheckboxSelection","useState","expanded","setExpanded","className","map","message","index","ExpansionPanel","key","id","elevation","ExpansionPanelSummary","Checkbox","checked","selected","onChange","event","color","IconButton","Icon","onClick","toggleExpansionPanel","Avatar","src","sender","photo","name","format","Date","date","getTime","subject","getTimeDifference","menuButton","MenuItem","ExpansionPanelDetails","ReactHtmlParser","InboxComposeDialog","open","handleClose","to","content","attachment","state","setState","handleChange","persist","target","value","Dialog","onClose","maxWidth","fullWidth","onSubmit","onError","errors","label","type","validators","errorMessages","handleContentChange","contentHtml","placeholder","Button","htmlFor","component","files","Fab","size","InboxSidenav","React","setOpen","variant","ListItem","button","ListItemIcon","ListItemText","primary","Divider","useStyles","makeStyles","palette","topbar","borderTopRightRadius","borderTopLeftRadius","InboxTopBar","toggleSidenav","handleMasterCheckbox","masterCheckbox","classes","clsx","Hidden","smUp","FormControlLabel","control","AppInbox","isAlive","setIsAlive","setMasterCheckbox","setMessageList","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","axios","get","then","data","width","temp","isChecked"],"mappings":"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","file":"static/js/73.e0123476.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ReactHtmlParser from 'react-html-parser'\nimport { IconButton, Icon, Checkbox, Avatar, MenuItem } from '@material-ui/core'\nimport { MatxMenu } from 'app/components'\nimport { format } from 'date-fns'\nimport { getTimeDifference } from 'utils'\n\nconst InboxMessageList = ({ messageList, handleCheckboxSelection }) => {\n    const [expanded, setExpanded] = useState(false)\n\n    const toggleExpansionPanel = (index) => {\n        if (index === expanded) setExpanded(false)\n        else setExpanded(index)\n    }\n\n    return (\n        <div className=\"mx-1 mb-1\">\n            {messageList.map((message, index) => (\n                <ExpansionPanel\n                    key={message.id}\n                    expanded={expanded === index}\n                    elevation={3}\n                >\n                    <ExpansionPanelSummary className=\"p-0 pl-2 pr-6\">\n                        <div className=\"flex items-center w-full px-2\">\n                            {expanded !== index && (\n                                <Fragment>\n                                    <Checkbox\n                                        checked={message.selected}\n                                        onChange={(event) =>\n                                            handleCheckboxSelection(\n                                                event,\n                                                index\n                                            )\n                                        }\n                                        color=\"secondary\"\n                                    />\n                                    <IconButton>\n                                        <Icon>star_border</Icon>\n                                    </IconButton>\n                                </Fragment>\n                            )}\n\n                            <div\n                                className=\"flex flex-grow items-center justify-between h-full\"\n                                onClick={() => toggleExpansionPanel(index)}\n                            >\n                                {expanded === index && (\n                                    <div className=\"flex items-center ml-3\">\n                                        <Avatar src={message.sender.photo} />\n                                        <div className=\"ml-2\">\n                                            <h5 className=\"mb-0 ml-1 font-normal\">\n                                                {message.sender.name}\n                                            </h5>\n                                            <small className=\"text-muted\">\n                                                {format(\n                                                    new Date(\n                                                        message.date\n                                                    ).getTime(),\n                                                    'MMMM dd, yyyy'\n                                                )}\n                                            </small>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {expanded !== index && (\n                                    <h5 className=\"mb-0 ml-1 text-14 text-muted font-normal\">\n                                        {message.sender.name}\n                                    </h5>\n                                )}\n\n                                <p className=\"m-0\">{message.subject}</p>\n                                <small className=\"text-muted\">\n                                    {getTimeDifference(new Date(message.date))}{' '}\n                                    ago\n                                </small>\n                            </div>\n                            <MatxMenu\n                                menuButton={\n                                    <IconButton>\n                                        <Icon>more_vert</Icon>\n                                    </IconButton>\n                                }\n                            >\n                                <MenuItem className=\"flex items-center\">\n                                    <Icon className=\"mr-4\">reply</Icon> Reply\n                                </MenuItem>\n                                <MenuItem className=\"flex items-center\">\n                                    <Icon className=\"mr-4\">archive</Icon>{' '}\n                                    Archive\n                                </MenuItem>\n                                <MenuItem className=\"flex items-center\">\n                                    <Icon className=\"mr-4\">delete</Icon> Delete\n                                </MenuItem>\n                            </MatxMenu>\n                        </div>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <div>{ReactHtmlParser(message.message)}</div>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            ))}\n        </div>\n    )\n}\n\nexport default InboxMessageList\n","import React, { useState } from 'react'\nimport { Dialog, Button, IconButton, Icon, Fab } from '@material-ui/core'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { RichTextEditor } from 'app/components'\n\nconst InboxComposeDialog = ({ open, handleClose }) => {\n    const [state, setState] = useState({\n        to: '',\n        subject: '',\n        content: '',\n        attachment: null,\n    })\n\n    const handleSubmit = (event) => {\n        // console.log(state);\n    }\n\n    const handleChange = (event) => {\n        event.persist()\n        setState({ ...state, [event.target.name]: event.target.value })\n    }\n\n    const handleContentChange = (contentHtml) => {\n        setState({\n            ...state,\n            content: contentHtml,\n        })\n    }\n\n    const handleAttachmentSelection = (event) => {\n        setState({\n            ...state,\n            attachment: event.target.files[0],\n        })\n    }\n\n    let { to, subject, content, attachment } = state\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            maxWidth=\"md\"\n            fullWidth={true}\n        >\n            {/* <RichTextEditor placeholder=\"insert text here...\" /> */}\n            <div className=\"p-6\">\n                <ValidatorForm\n                    onSubmit={handleSubmit}\n                    onError={(errors) => null}\n                >\n                    <TextValidator\n                        className=\"mb-4 w-full\"\n                        label=\"To\"\n                        onChange={handleChange}\n                        type=\"email\"\n                        name=\"to\"\n                        value={to}\n                        validators={['required', 'isEmail']}\n                        errorMessages={[\n                            'this field is required',\n                            'email is not valid',\n                        ]}\n                    />\n                    <TextValidator\n                        className=\"mb-4 w-full\"\n                        label=\"Subject\"\n                        onChange={handleChange}\n                        type=\"text\"\n                        name=\"subject\"\n                        value={subject}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                    />\n                    <RichTextEditor\n                        content={content}\n                        handleContentChange={handleContentChange}\n                        placeholder=\"insert text here...\"\n                    />\n                    <div className=\"mt-4 flex flex-wrap justify-between\">\n                        <Button onClick={handleClose}>Cancel</Button>\n\n                        <div className=\"flex items-center\">\n                            {attachment && (\n                                <p className=\"mr-6\">{attachment.name}</p>\n                            )}\n                            <label htmlFor=\"attachment\">\n                                <IconButton className=\"mr-2\" component=\"span\">\n                                    <Icon>attachment</Icon>\n                                </IconButton>\n                            </label>\n                            <input\n                                onChange={handleAttachmentSelection}\n                                className=\"hidden\"\n                                id=\"attachment\"\n                                type=\"file\"\n                            />\n                            <Fab size=\"medium\" color=\"secondary\" type=\"submit\">\n                                <Icon>send</Icon>\n                            </Fab>\n                        </div>\n                    </div>\n                </ValidatorForm>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default InboxComposeDialog\n","import React from 'react'\nimport {\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Divider,\n    Icon,\n    Button,\n} from '@material-ui/core'\nimport InboxComposeDialog from './InboxComposeDialog'\n\nconst InboxSidenav = () => {\n    const [open, setOpen] = React.useState(false)\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    return (\n        <div className=\"mr-4 bg-default\">\n            <Button\n                onClick={() => setOpen(true)}\n                variant=\"contained\"\n                className=\"py-2 bg-error w-full\"\n            >\n                Compose\n            </Button>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>inbox</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Inbox\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>folder_special</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Starred\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>send</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Sent\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>inbox</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Inbox\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>error</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Spam\" />\n            </ListItem>\n\n            <Divider />\n\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon color=\"primary\">people</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Social\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon color=\"secondary\">local_offer</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Promotions\" />\n            </ListItem>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon color=\"secondary\">forums</Icon>\n                </ListItemIcon>\n                <ListItemText primary=\"Forums\" />\n            </ListItem>\n\n            <InboxComposeDialog open={open} handleClose={handleClose} />\n        </div>\n    )\n}\n\nexport default InboxSidenav\n","import React from 'react'\nimport {\n    FormControlLabel,\n    Checkbox,\n    IconButton,\n    Icon,\n    Hidden,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    topbar: {\n        borderTopRightRadius: 4,\n        borderTopLeftRadius: 4,\n    },\n}))\n\nconst InboxTopBar = ({\n    toggleSidenav,\n    handleMasterCheckbox,\n    masterCheckbox,\n}) => {\n    const classes = useStyles()\n\n    return (\n        <div\n            className={clsx(\n                'py-1 mx-1 flex items-center relative bg-primary',\n                classes.topbar\n            )}\n        >\n            <Hidden smUp>\n                <IconButton className=\"text-white\" onClick={toggleSidenav}>\n                    <Icon>short_text</Icon>\n                </IconButton>\n            </Hidden>\n            <FormControlLabel\n                className=\"text-white ml-4\"\n                control={\n                    <Checkbox\n                        checked={masterCheckbox}\n                        onChange={handleMasterCheckbox}\n                        color=\"secondary\"\n                    />\n                }\n                label=\"All\"\n            />\n            <IconButton>\n                <Icon className=\"text-white\">delete</Icon>\n            </IconButton>\n            <IconButton>\n                <Icon className=\"text-white\">folder_special</Icon>\n            </IconButton>\n            <IconButton>\n                <Icon className=\"text-white\">archive</Icon>\n            </IconButton>\n            <IconButton>\n                <Icon className=\"text-white\">error</Icon>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default InboxTopBar\n","import React, { useState, useEffect } from 'react'\nimport {\n    MatxSidenavContainer,\n    MatxSidenav,\n    MatxSidenavContent,\n} from 'app/components'\nimport InboxMessageList from './InboxMessagList'\nimport InboxSidenav from './InboxSidenav'\nimport InboxTopBar from './InboxTopbar'\nimport { getAllMessage } from './InboxService'\nimport { useMediaQuery } from '@material-ui/core'\nimport { useTheme } from '@material-ui/core/styles'\n\nconst AppInbox = () => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [masterCheckbox, setMasterCheckbox] = useState(false)\n    const [messageList, setMessageList] = useState([])\n\n    const theme = useTheme()\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n\n    const toggleSidenav = () => {\n        setOpen(!open)\n    }\n\n    const handleMasterCheckbox = (event) => {\n        let temp = messageList\n        let isChecked = event.target.checked\n        if (isChecked) {\n            temp.map((message) => {\n                message.selected = true\n                return message\n            })\n        } else {\n            temp.map((message) => {\n                message.selected = false\n                return message\n            })\n        }\n        setMessageList(temp)\n        setMasterCheckbox(isChecked)\n    }\n\n    const handleCheckboxSelection = (event, index) => {\n        event.persist()\n        let temp = messageList\n        temp[index].selected = event.target.checked\n        setMessageList([...temp])\n    }\n\n    useEffect(() => {\n        if (isMobile) setOpen(false)\n    }, [isMobile])\n\n    useEffect(() => {\n        getAllMessage().then(({ data }) => {\n            if (isAlive) setMessageList(data)\n        })\n    }, [isAlive])\n\n    useEffect(() => {\n        return () => setIsAlive(false)\n    }, [])\n\n    return (\n        <div className=\"flex m-sm-30\">\n            <div className=\"w-full\">\n                <MatxSidenavContainer>\n                    <MatxSidenav\n                        width=\"220px\"\n                        toggleSidenav={toggleSidenav}\n                        open={open}\n                    >\n                        <InboxSidenav />\n                    </MatxSidenav>\n                    <MatxSidenavContent>\n                        <InboxTopBar\n                            masterCheckbox={masterCheckbox}\n                            handleMasterCheckbox={handleMasterCheckbox}\n                            toggleSidenav={toggleSidenav}\n                        />\n                        <InboxMessageList\n                            handleCheckboxSelection={handleCheckboxSelection}\n                            messageList={messageList}\n                        />\n                    </MatxSidenavContent>\n                </MatxSidenavContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default AppInbox\n","import axios from 'axios'\n\nexport const getAllMessage = () => {\n    return axios.get('/api/inbox/all')\n}\nexport const getMessageById = (id) => {\n    return axios.get('/api/inbox', { data: id })\n}\nexport const deleteMessage = (message) => {\n    return axios.post('/api/inbox/delete', message)\n}\nexport const addNewMessage = (message) => {\n    return axios.post('/api/inbox/add', message)\n}\nexport const updateMessage = (message) => {\n    return axios.post('/api/inbox/update', message)\n}\n"],"sourceRoot":""}