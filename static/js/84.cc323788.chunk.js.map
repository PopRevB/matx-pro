{"version":3,"sources":["app/views/charts/victory-charts/CircularProgressBar.jsx","app/views/charts/victory-charts/StackedPolarBar.jsx","app/views/charts/victory-charts/VictoryAreaAnimation.jsx","app/views/charts/victory-charts/RadarChart.jsx","app/views/charts/victory-charts/AlternativeEvents.jsx","app/views/charts/victory-charts/CustomTooltipLabelChart.jsx","app/views/charts/victory-charts/AppVictoryChart.jsx"],"names":["CircularProgressBar","theme","useTheme","useState","data","setData","percent","useRef","useEffect","getData","current","setStateInterval","setInterval","clearInterval","x","y","style","height","viewBox","width","standalone","animate","duration","innerRadius","cornerRadius","labels","fill","d","color","newProps","textAnchor","verticalAnchor","text","Math","round","fontSize","palette","secondary","directions","0","45","90","135","180","225","270","315","orange","base","highlight","red","CompassCenter","origin","circleStyle","stroke","strokeWidth","cx","cy","r","CenterLabel","datum","active","_x","_y1","baseStyle","fontWeight","renderInPortal","getWindData","_","map","speed","floor","windSpeed","windGust","windBearing","StackedPolarBar","wind","setWind","className","polar","onLoad","VictoryTheme","material","domainPadding","events","childName","target","eventHandlers","onMouseOver","mutation","onMouseOut","dependentAxis","labelPlacement","axis","tickFormat","tickValues","k","a","labelComponent","VictoryAreaAnimation","containerComponent","responsive","label","colorScale","i","key","interpolation","characterData","strength","intelligence","luck","stealth","charisma","RadarChart","props","maxima","state","setState","getMaxima","useCallback","groupedData","Object","keys","reduce","memo","max","processData","maxByGroup","domain","fillOpacity","axisLabel","padding","grid","opacity","tickLabelComponent","axisValue","t","ceil","AlternativeEventsChart","clicked","scale","dataComponent","fillColor","Date","CustomLabel","orientation","pointerLength","flyoutWidth","flyoutHeight","flyoutStyle","defaultEvents","VictoryTooltip","CustomTooltipLableChart","labelRadius","AppVictoryChart","routeSegments","name","path","title","AlternativeEvents"],"mappings":"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","file":"static/js/84.cc323788.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { VictoryPie, VictoryAnimation, VictoryLabel } from 'victory'\nimport { useTheme } from '@material-ui/core/styles'\n\nconst CircularProgressBar = () => {\n    const theme = useTheme()\n    const [data, setData] = useState([])\n    const percent = useRef(0)\n\n    useEffect(() => {\n        setData(getData(percent.current))\n\n        let setStateInterval = setInterval(() => {\n            percent.current += 25\n            percent.current = percent.current > 100 ? 0 : percent.current\n            setData(getData(percent.current))\n        }, 2000)\n\n        return () => {\n            if (setStateInterval) clearInterval(setStateInterval)\n        }\n    }, [])\n\n    const getData = (percent) => {\n        return [\n            { x: 1, y: percent },\n            { x: 2, y: 100 - percent },\n        ]\n    }\n\n    return (\n        <div style={{ height: '320px' }}>\n            <svg viewBox=\"0 0 400 400\" width=\"100%\" height=\"100%\">\n                <VictoryPie\n                    standalone={false}\n                    animate={{ duration: 1000 }}\n                    width={400}\n                    height={400}\n                    data={data}\n                    innerRadius={120}\n                    cornerRadius={25}\n                    labels={() => null}\n                    style={{\n                        data: {\n                            fill: (d) => {\n                                const color = d.y > 30 ? 'green' : 'red'\n                                return d.x === 1 ? color : 'transparent'\n                            },\n                        },\n                    }}\n                />\n                <VictoryAnimation\n                    duration={1000}\n                    data={{ percent: percent.current, data }}\n                >\n                    {(newProps) => {\n                        return (\n                            <VictoryLabel\n                                textAnchor=\"middle\"\n                                verticalAnchor=\"middle\"\n                                x={200}\n                                y={200}\n                                text={`${Math.round(newProps.percent)}%`}\n                                style={{\n                                    fontSize: 45,\n                                    fill: theme.palette.text.secondary,\n                                }}\n                            />\n                        )\n                    }}\n                </VictoryAnimation>\n            </svg>\n        </div>\n    )\n}\n\nexport default CircularProgressBar\n","import React, { useState, useEffect } from 'react'\nimport {\n    VictoryChart,\n    VictoryLabel,\n    VictoryTheme,\n    VictoryPolarAxis,\n    VictoryBar,\n    VictoryStack,\n} from 'victory'\nimport * as _ from 'lodash'\nimport { useTheme } from '@material-ui/styles'\n\nconst directions = {\n    0: 'E',\n    45: 'NE',\n    90: 'N',\n    135: 'NW',\n    180: 'W',\n    225: 'SW',\n    270: 'S',\n    315: 'SE',\n}\n\nconst orange = { base: 'gold', highlight: 'darkOrange' }\n\nconst red = { base: 'tomato', highlight: 'orangeRed' }\n\nconst innerRadius = 30\n\nconst CompassCenter = ({ origin }) => {\n    const circleStyle = {\n        stroke: red.base,\n        strokeWidth: 2,\n        fill: orange.base,\n    }\n\n    return (\n        <g>\n            <circle\n                cx={origin.x}\n                cy={origin.y}\n                r={innerRadius}\n                style={circleStyle}\n            />\n        </g>\n    )\n}\n\nconst CenterLabel = ({ datum, active, color }) => {\n    const theme = useTheme()\n\n    const text = [`${directions[datum?._x]}`, `${Math.round(datum?._y1)} mph`]\n    const baseStyle = {\n        fill: theme ? theme.palette.text.secondary : color.highlight,\n        textAnchor: 'middle',\n    }\n    const style = [{ ...baseStyle, fontSize: 18, fontWeight: 'bold' }]\n\n    return active ? (\n        <VictoryLabel\n            text={text}\n            style={style}\n            x={175}\n            y={175}\n            renderInPortal\n        />\n    ) : null\n}\n\nconst getWindData = () => {\n    return _.keys(directions).map((d) => {\n        const speed = Math.floor(_.random() * 17) + 4\n        return {\n            windSpeed: speed,\n            windGust: speed + _.random(2, 10),\n            windBearing: +d,\n        }\n    })\n}\n\nconst StackedPolarBar = () => {\n    const [wind, setWind] = useState(getWindData())\n    const theme = useTheme()\n\n    useEffect(() => {\n        setWind(getWindData())\n        let setStateInterval = setInterval(() => {\n            setWind(getWindData())\n        }, 4000)\n\n        return () => {\n            if (setStateInterval) clearInterval(setStateInterval)\n        }\n    }, [])\n\n    return (\n        <div className=\"h-320\">\n            <VictoryChart\n                polar\n                animate={{ duration: 500, onLoad: { duration: 500 } }}\n                theme={VictoryTheme.material}\n                innerRadius={innerRadius}\n                domainPadding={{ y: 10 }}\n                events={[\n                    {\n                        childName: 'all',\n                        target: 'data',\n                        eventHandlers: {\n                            onMouseOver: () => {\n                                return [\n                                    {\n                                        target: 'labels',\n                                        mutation: () => ({ active: true }),\n                                    },\n                                    {\n                                        target: 'data',\n                                        mutation: () => ({ active: true }),\n                                    },\n                                ]\n                            },\n                            onMouseOut: () => {\n                                return [\n                                    {\n                                        target: 'labels',\n                                        mutation: () => ({ active: false }),\n                                    },\n                                    {\n                                        target: 'data',\n                                        mutation: () => ({ active: false }),\n                                    },\n                                ]\n                            },\n                        },\n                    },\n                ]}\n            >\n                <VictoryPolarAxis\n                    dependentAxis\n                    labelPlacement=\"vertical\"\n                    style={{ axis: { stroke: 'none' } }}\n                    tickFormat={() => ''}\n                />\n                <VictoryPolarAxis\n                    labelPlacement=\"parallel\"\n                    tickValues={_.keys(directions).map((k) => +k)}\n                    tickFormat={_.values(directions)}\n                />\n                <VictoryStack>\n                    <VictoryBar\n                        style={{\n                            data: {\n                                fill: (d, a) =>\n                                    a ? orange.highlight : orange.base,\n                                width: 40,\n                            },\n                        }}\n                        data={wind}\n                        x=\"windBearing\"\n                        y=\"windSpeed\"\n                        labels={() => ''}\n                        labelComponent={\n                            <CenterLabel theme={theme} color={orange} />\n                        }\n                    />\n                    <VictoryBar\n                        style={{\n                            data: {\n                                fill: (d, a) => (a ? red.highlight : red.base),\n                                width: 40,\n                            },\n                        }}\n                        data={wind}\n                        x=\"windBearing\"\n                        y={(d) => d.windGust - d.windSpeed}\n                        labels={() => ''}\n                        labelComponent={<CenterLabel color={red} />}\n                    />\n                </VictoryStack>\n                <CompassCenter />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default StackedPolarBar\n","import React, { useState, useEffect } from 'react'\nimport * as _ from 'lodash'\nimport {\n    VictoryChart,\n    VictoryTheme,\n    VictoryStack,\n    VictoryArea,\n    VictoryContainer,\n} from 'victory'\n\nimport { useTheme } from '@material-ui/styles'\n\nconst VictoryAreaAnimation = () => {\n    const [data, setData] = useState([])\n    const theme = useTheme()\n\n    const getData = () => {\n        return _.range(7).map(() => {\n            return [\n                { x: 1, y: _.random(1, 5) },\n                { x: 2, y: _.random(1, 10) },\n                { x: 3, y: _.random(2, 10) },\n                { x: 4, y: _.random(2, 10) },\n                { x: 5, y: _.random(2, 15) },\n            ]\n        })\n    }\n\n    useEffect(() => {\n        setData(getData())\n        let setStateInterval = setInterval(() => {\n            setData(getData())\n        }, 4000)\n\n        return () => clearInterval(setStateInterval)\n    }, [])\n\n    return (\n        <div className=\"h-320\">\n            <VictoryChart\n                width={700}\n                containerComponent={<VictoryContainer responsive={true} />}\n                theme={VictoryTheme.material}\n                animate={{ duration: 1000 }}\n                style={{\n                    label: { fontSize: 45, fill: theme.palette.text.secondary },\n                }}\n            >\n                <VictoryStack colorScale={'blue'}>\n                    {data.map((data, i) => {\n                        return (\n                            <VictoryArea\n                                key={i}\n                                data={data}\n                                interpolation={'basis'}\n                            />\n                        )\n                    })}\n                </VictoryStack>\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default VictoryAreaAnimation\n","import React, { useState, useEffect, useCallback } from 'react'\nimport {\n    VictoryChart,\n    VictoryTheme,\n    VictoryArea,\n    VictoryGroup,\n    VictoryPolarAxis,\n    VictoryLabel,\n} from 'victory'\n\nconst characterData = [\n    { strength: 1, intelligence: 250, luck: 1, stealth: 40, charisma: 50 },\n    { strength: 2, intelligence: 300, luck: 2, stealth: 80, charisma: 90 },\n    { strength: 5, intelligence: 225, luck: 3, stealth: 60, charisma: 120 },\n]\n\nconst RadarChart = (props) => {\n    const [state, setState] = useState({\n        data: [],\n        maxima: {},\n    })\n\n    const getMaxima = useCallback((data) => {\n        const groupedData = Object.keys(data[0]).reduce((memo, key) => {\n            memo[key] = data.map((d) => d[key])\n            return memo\n        }, {})\n        return Object.keys(groupedData).reduce((memo, key) => {\n            memo[key] = Math.max(...groupedData[key])\n            return memo\n        }, {})\n    }, [])\n\n    const processData = useCallback(\n        (data) => {\n            const maxByGroup = getMaxima(data)\n            const makeDataArray = (d) => {\n                return Object.keys(d).map((key) => {\n                    return { x: key, y: d[key] / maxByGroup[key] }\n                })\n            }\n            return data.map((datum) => makeDataArray(datum))\n        },\n        [getMaxima]\n    )\n\n    useEffect(() => {\n        setState({\n            data: processData(characterData),\n            maxima: getMaxima(characterData),\n        })\n    }, [processData, getMaxima])\n\n    return (\n        <div className=\"h-320\">\n            <VictoryChart\n                polar\n                theme={VictoryTheme.material}\n                domain={{ y: [0, 1] }}\n            >\n                <VictoryGroup\n                    colorScale={['gold', 'orange', 'tomato']}\n                    style={{ data: { fillOpacity: 0.2, strokeWidth: 2 } }}\n                >\n                    {state.data.map((data, i) => {\n                        return <VictoryArea key={i} data={data} />\n                    })}\n                </VictoryGroup>\n                {Object.keys(state.maxima).map((key, i) => {\n                    return (\n                        <VictoryPolarAxis\n                            key={i}\n                            dependentAxis\n                            style={{\n                                axisLabel: { padding: 10 },\n                                axis: { stroke: 'none' },\n                                grid: {\n                                    stroke: 'grey',\n                                    strokeWidth: 0.25,\n                                    opacity: 0.5,\n                                },\n                            }}\n                            tickLabelComponent={\n                                <VictoryLabel labelPlacement=\"vertical\" />\n                            }\n                            labelPlacement=\"perpendicular\"\n                            axisValue={i + 1}\n                            label={key}\n                            tickFormat={(t) => Math.ceil(t * state.maxima[key])}\n                            tickValues={[0.25, 0.5, 0.75]}\n                        />\n                    )\n                })}\n                <VictoryPolarAxis\n                    labelPlacement=\"parallel\"\n                    tickFormat={() => ''}\n                    style={{\n                        axis: { stroke: 'none' },\n                        grid: { stroke: 'grey', opacity: 0.5 },\n                    }}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default RadarChart\n","import React, { useState } from 'react'\nimport { VictoryChart, Bar, VictoryBar } from 'victory'\n\nconst AlternativeEventsChart = () => {\n    const [state, setState] = useState({\n        clicked: false,\n        style: {\n            data: {\n                fill: 'tomato',\n            },\n        },\n    })\n\n    const handleMouseOver = () => {\n        const fillColor = state.clicked ? 'blue' : 'tomato'\n        const clicked = !state.clicked\n        setState({\n            clicked,\n            style: {\n                data: { fill: fillColor },\n            },\n        })\n    }\n\n    return (\n        <div className=\"h-320\">\n            <VictoryChart\n                domainPadding={{ x: 50, y: [0, 20] }}\n                scale={{ x: 'time' }}\n            >\n                <VictoryBar\n                    dataComponent={\n                        <Bar events={{ onMouseOver: handleMouseOver }} />\n                    }\n                    style={state.style}\n                    data={[\n                        { x: new Date(1986, 1, 1), y: 2 },\n                        { x: new Date(1996, 1, 1), y: 3 },\n                        { x: new Date(2006, 1, 1), y: 5 },\n                        { x: new Date(2016, 1, 1), y: 4 },\n                    ]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default AlternativeEventsChart\n","import React from 'react'\nimport { VictoryLabel, VictoryTooltip, VictoryPie } from 'victory'\n\nconst CustomLabel = (props = {}) => {\n    return (\n        <g>\n            <VictoryLabel {...props} />\n            <VictoryTooltip\n                {...props}\n                text={`# ${props.text}`}\n                style={{ fill: 'white' }}\n                x={200}\n                y={250}\n                orientation=\"top\"\n                pointerLength={0}\n                cornerRadius={50}\n                flyoutWidth={100}\n                flyoutHeight={100}\n                flyoutStyle={{ fill: 'black' }}\n            />\n        </g>\n    )\n}\n\nCustomLabel.defaultEvents = VictoryTooltip.defaultEvents\n\nconst CustomTooltipLableChart = () => {\n    return (\n        <div className=\"flex justify-center\">\n            <div style={{ width: '300px' }}>\n                <VictoryPie\n                    style={{ labels: { fill: 'white' } }}\n                    innerRadius={100}\n                    labelRadius={120}\n                    labels={(d) => d.y}\n                    labelComponent={<CustomLabel />}\n                    data={[\n                        { x: 1, y: 5 },\n                        { x: 2, y: 4 },\n                        { x: 3, y: 2 },\n                        { x: 4, y: 3 },\n                        { x: 5, y: 1 },\n                    ]}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CustomTooltipLableChart\n","import React from 'react'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport CircularProgressBar from './CircularProgressBar'\nimport StackedPolarBar from './StackedPolarBar'\nimport VictoryAreaAnimation from './VictoryAreaAnimation'\nimport RadarChart from './RadarChart'\nimport AlternativeEventsChart from './AlternativeEvents'\nimport CustomTooltipLableChart from './CustomTooltipLabelChart'\n\nconst AppVictoryChart = () => {\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Charts', path: '/charts' },\n                        { name: 'Victory Charts' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"circular progress bar\">\n                <CircularProgressBar />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"stacked polar bar\">\n                <StackedPolarBar />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"area animation Chart\">\n                <VictoryAreaAnimation />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"victory radar Chart\">\n                <RadarChart />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"alternative events Chart\">\n                <AlternativeEventsChart />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"custom tooltip label\">\n                <CustomTooltipLableChart />\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default AppVictoryChart\n"],"sourceRoot":""}