{"version":3,"sources":["app/components/ShoppingCart/ShoppingCart.jsx","app/components/Footer/Footer.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/Sidenav/Sidenav.jsx","app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["useStyles","makeStyles","palette","miniCart","width","height","transition","background","customBadge","backgroundColor","color","cartListLoaded","ShoppingCart","container","useState","totalCost","setTotalCost","panelOpen","setPanelOpen","classes","dispatch","useDispatch","history","useHistory","user","useAuth","cartList","useSelector","state","ecommerce","settings","useSettings","getCartList","id","handleDrawerToggle","useEffect","total","forEach","product","price","amount","onClick","badge","badgeContent","length","className","theme","themes","activeTheme","variant","anchor","open","onClose","ModalProps","keepMounted","clsx","map","key","size","updateCartAmount","disabled","src","imgUrl","alt","title","deleteProductFromCart","userId","fontSize","push","toFixed","footer","minHeight","display","padding","flexDirection","margin","appbar","zIndex","Footer","useTheme","footerTheme","position","href","SidenavTheme","children","sidenavTheme","layout1Settings","leftSidebar","toggle","right","bottom","SecondarySidebarToggle","updateSettings","secondarySidebar","IconButton","aria-label","Icon","Fab","BadgeSelected","withStyles","top","borderRadius","Badge","label","secondary","main","primary","dark","fontWeight","transform","marginBottom","cursor","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","alignItems","demoLayouts","name","thumbnail","isPro","options","activeLayout","mode","bgOpacity","topbar","fixed","layout2Settings","MatxCustomizer","props","setOpen","tabIndex","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","ThemeProvider","Drawer","Button","suppressScrollX","layout","invisible","Card","elevation","Link","target","root","boxShadow","shadows","marginRight","SecondarySidebarContent","icon","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","left","breakpoints","up","Sidenav","items","navigations","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","updateSidebarMode","brand","hideOnCompact","Brand","sidenavHoverShow","sidenav","primaryRGB","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","text","maxWidth","userInfo","React","memo","convertHexToRGB","getSidenavWidth","Hidden","smDown","Switch","onChange","checked","reducer","action","type","notifications","payload","NotificationContext","createContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","useReducer","notificationID","a","axios","post","res","data","console","error","get","notification","Provider","value","useNotification","useContext","notificationCard","marginTop","opacity","NotificationBar","to","path","heading","getTimeDifference","Date","timestamp","subtitle","down","userMenu","menuItem","minWidth","logout","isMdScreen","useMediaQuery","menuButton","xsDown","Avatar","avatar","MenuItem","contentWrap","verticalAlign","marginLeft","sidenavMode","showSidenav","show","routes","AppContext","sidenavWidth","ref","useRef","topbarTheme","layoutClasses","current","sidebarMode","Layout1Sidenav","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/53.60db4f34.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport useAuth from 'app/hooks/useAuth'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    miniCart: {\n        width: 'var(--sidenav-width)',\n        '& .cart__topbar': {\n            height: 'var(--topbar-height)',\n        },\n        '& .mini-cart__item': {\n            transition: 'background 300ms ease',\n            '&:hover': {\n                background: 'rgba(0,0,0,0.01)',\n            },\n        },\n    },\n    customBadge: {\n        backgroundColor: \"#ddd\",\n        color: \"#000\"\n        },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            history.push('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n\n        setTotalCost(total)\n    }, [cartList])\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" classes={{badge: classes.customBadge}} badgeContent={cartList.length}>\n                    <Icon className='text-muted'>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx('flex-column h-full', classes.miniCart)}\n                    >\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\n                        </div>\n\n                        <div className=\"flex-grow overflow-auto\">\n                            {cartList.map((product) => (\n                                <div\n                                    key={product.id}\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\n                                >\n                                    <div className=\"flex flex-column mr-1\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                    <div className=\"mr-2\">\n                                        <img\n                                            className=\"w-48\"\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </div>\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\n                                            {product.title}\n                                        </h6>\n                                        <small className=\"text-muted\">\n                                            ${product.price} x {product.amount}\n                                        </small>\n                                    </div>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </IconButton>\n                                </div>\n                            ))}\n                        </div>\n\n                        <Button\n                            className=\"w-full border-radius-0\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React from 'react'\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles'\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    footer: {\n        minHeight: 'var(--topbar-height)',\n        '@media (max-width: 499px)': {\n            display: 'table',\n            width: '100%',\n            minHeight: 'auto',\n            padding: '1rem 0',\n            '& .container': {\n                flexDirection: 'column !important',\n                '& a': {\n                    margin: '0 0 16px !important',\n                },\n            },\n        },\n    },\n    appbar: {\n        zIndex: 96,\n    },\n}))\n\nconst Footer = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return (\n        <ThemeProvider theme={footerTheme}>\n            <AppBar\n                color=\"primary\"\n                position=\"static\"\n                className={classes.appbar}\n            >\n                <Toolbar className={clsx('flex items-center', classes.footer)}>\n                    <div className=\"flex items-center container w-full\">\n                        {/* <a\n              href=\"https://github.com/uilibrary/matx-react\"\n              target=\"_blank\"\n              className=\"mr-2\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button variant=\"contained\">Download Free version</Button>\n            </a> */}\n                        <a href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                                Get MatX Pro\n                            </Button>\n                        </a>\n                        <span className=\"m-auto\"></span>\n                        <p className=\"m-0\">\n                            Design and Developed by{' '}\n                            <a href=\"http://ui-lib.com\">UI Lib</a>\n                        </p>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </ThemeProvider>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { Fab, IconButton, Icon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    toggle: {\n        position: 'fixed',\n        right: '30px',\n        bottom: '50px',\n        zIndex: 99,\n        transition: 'all 0.15s ease',\n        '&.open': {\n            right: '10px',\n        },\n    },\n}))\n\nconst SecondarySidebarToggle = () => {\n    // const isMobile = useMediaQuery(\"(max-width:767px)\");\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const toggle = () => {\n        updateSettings({\n            secondarySidebar: { open: !settings.secondarySidebar.open },\n        })\n    }\n\n    // useEffect(() => {\n    //   updateSettings({\n    //     secondarySidebar: { open: !isMobile },\n    //   });\n    // }, [isMobile]);\n\n    return (\n        <div\n            className={clsx({\n                [classes.toggle]: true,\n                open: settings.secondarySidebar.open,\n            })}\n        >\n            {settings.secondarySidebar.open && (\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n                    <Icon>close</Icon>\n                </IconButton>\n            )}\n            {!settings.secondarySidebar.open && (\n                <Fab\n                    // variant=\"extended\"\n                    // size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"expand\"\n                    className=\"\"\n                    onClick={toggle}\n                >\n                    <Icon>settings</Icon>\n                </Fab>\n            )}\n        </div>\n    )\n}\n\nexport default SecondarySidebarToggle\n","import { Badge } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst BadgeSelected = withStyles((theme) => ({\n    badge: {\n        top: '0',\n        right: '0',\n        height: '32px',\n        width: '32px',\n        borderRadius: '50%',\n    },\n}))(Badge)\n\nexport default BadgeSelected\n","import React, { Fragment, useState } from 'react'\nimport {\n    Icon,\n    IconButton,\n    Button,\n    // FormGroup,\n    // Switch,\n    // FormControlLabel,\n    // FormControl,\n    // FormLabel,\n    Card,\n    Tooltip,\n    Drawer,\n    Link,\n} from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\n// import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from './BadgeSelected'\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    label: {\n        color: palette.secondary.main,\n        backgroundColor: palette.primary.dark,\n        fontWeight: 700,\n        transform: 'rotate(90deg)',\n        marginBottom: '2.5rem',\n        padding: '.25rem .5rem',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        letterSpacing: '1.5px',\n        fontSize: '1rem',\n        '&:hover, &.open': {\n            backgroundColor: palette.secondary.main,\n            color: palette.secondary.contrastText,\n        },\n    },\n    helpText: {\n        margin: '0px .5rem 1rem',\n    },\n    maxCustomizer: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        zIndex: 50,\n    },\n    customizerCloseButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    layoutBox: {\n        '&:hover': {\n            '& .layout-name': {\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                width: '100%',\n                background: 'rgba(0,0,0,0.3)',\n                zIndex: 12,\n            },\n        },\n    },\n}))\n\nconst MatxCustomizer = (props) => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    // const handleChange = (name, value) => {\n    //   let updatedSettings = set(settings, name, value);\n\n    //   updateSettings(updatedSettings);\n    // };\n\n    // const handleControlChange = (name) => (event) => {\n    //   let controlValue =\n    //     event.target.type === \"checkbox\"\n    //       ? event.target.checked\n    //       : event.target.value;\n    //   handleChange(name, controlValue);\n    // };\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\n                <span\n                    className={clsx({ [classes.label]: true, open })}\n                    onClick={tooglePanel}\n                >\n                    DEMOS\n                </span>\n            </Tooltip>\n\n            {/* {open && ( */}\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx(\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\n                            classes.maxCustomizer\n                        )}\n                    >\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\n                            <Icon color=\"primary\">settings</Icon>\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\n                            <IconButton\n                                onClick={tooglePanel}\n                                className={classes.customizerCloseButton}\n                            >\n                                <Icon>close</Icon>\n                            </IconButton>\n                        </div>\n                        <div className=\"px-6 mb-4 flex\">\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(0)}\n                                className=\"mr-4\"\n                            >\n                                Demos\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(1)}\n                            >\n                                Settings\n                            </Button>\n                        </div>\n\n                        <Scrollbar\n                            options={{ suppressScrollX: true }}\n                            className=\"px-4\"\n                        >\n                            {tabIndex === 0 && (\n                                <div className=\"mb-8 mx-2\">\n                                    <div className=\"text-muted\">Layouts</div>\n\n                                    <div className=\"flex-column\">\n                                        {demoLayouts.map((layout) => (\n                                            <BadgeSelected\n                                                color=\"secondary\"\n                                                className={clsx(\n                                                    'w-full my-3 max-h-152 cursor-pointer',\n                                                    classes.layoutBox\n                                                )}\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    className=\"relative\"\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <div className=\"layout-name hidden\">\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </div>\n\n                                                    <img\n                                                        className=\"w-full\"\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </BadgeSelected>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* END LAYOUT */}\n\n                            {tabIndex === 1 && (\n                                <div>\n                                    <div className={classes.helpText}>\n                                        We used React context API to control\n                                        layout. Check out the{' '}\n                                        <Link\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\n                                            target=\"_blank\"\n                                        >\n                                            Documentation\n                                        </Link>\n                                    </div>\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">Main theme</div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {mainThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() =>\n                              updateSettings({ activeTheme: color })\n                            }\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.activeTheme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n\n                                    {/* {settings.activeLayout === \"layout1\" && (\n                    <Layout1Customizer\n                      settings={settings}\n                      handleChange={handleChange}\n                      handleControlChange={handleControlChange}\n                    />\n                  )}\n\n                  {settings.activeLayout === \"layout2\" && (\n                    <Layout2Customizer\n                      settings={settings}\n                      handleChange={handleChange}\n                      handleControlChange={handleControlChange}\n                    />\n                  )} */}\n\n                                    {/* <div className=\"mx-2 mb-6\">\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">Footer</FormLabel>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(settings.footer, \"show\")}\n                              onChange={handleControlChange(\"footer.show\")}\n                            />\n                          }\n                          label=\"Show\"\n                        />\n\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(\n                                settings.layout1Settings.footer,\n                                \"fixed\"\n                              )}\n                              onChange={handleControlChange(\"footer.fixed\")}\n                            />\n                          }\n                          label=\"Fixed\"\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </div> */}\n\n                                    {/* <div className=\"mx-2 mb-6\">\n                    <FormControl component=\"fieldset\">\n                      <FormLabel component=\"legend\">\n                        Secondary sidebar\n                      </FormLabel>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={get(settings.secondarySidebar, \"show\")}\n                              onChange={handleControlChange(\n                                \"secondarySidebar.show\"\n                              )}\n                            />\n                          }\n                          label=\"Show\"\n                        />\n                      </FormGroup>\n                    </FormControl>\n                  </div> */}\n\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">\n                      Secondary sidebar theme\n                    </div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {topbarThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() =>\n                              handleChange(\"secondarySidebar.theme\", color)\n                            }\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.secondarySidebar.theme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n\n                                    {/* <div className=\"mb-4 mx-2\">\n                    <div className=\"text-muted mb-4\">Footer theme</div>\n                    <div className=\"flex flex-wrap m--2\">\n                      {topbarThemes.map((color, i) => (\n                        <Tooltip key={i} title={color} placement=\"top\">\n                          <div\n                            className=\"flex justify-center items-center h-40 w-40 border-radius-4 m-2 cursor-pointer elevation-z3\"\n                            onClick={() => handleChange(\"footer.theme\", color)}\n                            style={{\n                              backgroundColor:\n                                themeColors[color].palette.primary.main,\n                            }}\n                          >\n                            {settings.footer.theme === color && (\n                              <Icon>done</Icon>\n                            )}\n                            <div\n                              className={settings.themes[color].palette.type}\n                            ></div>\n                          </div>\n                        </Tooltip>\n                      ))}\n                    </div>\n                  </div> */}\n                                </div>\n                            )}\n                        </Scrollbar>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n            {/* )} */}\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Theme',\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'purpleDark1',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'purpleDark1',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Horizontal Navigation',\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'purple1',\n            layout2Settings: {\n                mode: 'full',\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n","import React from 'react'\nimport { IconButton, Icon } from '@material-ui/core'\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { ChatHead } from 'app/components'\nimport { Chatbox } from 'app/components'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    root: {\n        position: 'fixed',\n        height: '100vh',\n        width: (props) => props.width,\n        right: 0,\n        bottom: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxShadow: theme.shadows[8],\n        backgroundColor: palette.primary.main,\n        zIndex: 98,\n        transition: 'all 0.15s ease',\n    },\n    '@global': {\n        '@media screen and (min-width: 767px)': {\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n                marginRight: (props) => props.width,\n            },\n            '.matx-customizer': {\n                right: (props) => props.width,\n            },\n        },\n        '@media screen and (max-width: 959px)': {\n            '.toolbar-menu-wrap .menu-area': {\n                width: (props) => `calc(100% - ${props.width})`,\n            },\n        },\n    },\n}))\n\nconst SecondarySidebarContent = () => {\n    const classes = useStyles({ width: '50px' })\n\n    return (\n        <div className={clsx('secondary-sidebar', classes.root)}>\n            <span className=\"m-auto\"></span>\n\n            <MatxCustomizer />\n\n            <ShoppingCart />\n\n            <ChatHead\n                icon={\n                    <IconButton className=\"my-3\" size=\"small\">\n                        <Icon>comments</Icon>\n                    </IconButton>\n                }\n            >\n                <Chatbox />\n            </ChatHead>\n\n            <span className=\"m-auto\"></span>\n        </div>\n    )\n}\n\nexport default SecondarySidebarContent\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\nexport default SecondarySidenavTheme\n","import React from 'react'\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\nimport SecondarySidebarContent from './SecondarySidebarContent'\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SecondarySidebar = () => {\n    const { settings } = useSettings()\n    const secondarySidebarTheme =\n        settings.themes[settings.secondarySidebar.theme]\n\n    return (\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\n            <SecondarySidebarToggle />\n        </SecondarySidenavTheme>\n    )\n}\n\nexport default SecondarySidebar\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    scrollable: {\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    sidenavMobileOverlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: '100vw',\n        background: 'rgba(0, 0, 0, 0.54)',\n        zIndex: -1,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <Scrollbar\n                options={{ suppressScrollX: true }}\n                className={clsx('relative px-4', classes.scrollable)}\n            >\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </Scrollbar>\n\n            <div\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n                className={classes.sidenavMobileOverlay}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    brand: {\n        padding: '20px 18px 20px 29px',\n    },\n    hideOnCompact: {\n        display: 'none',\n    },\n}))\n\nconst Brand = ({ children }) => {\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <div\n            className={clsx('flex items-center justify-between', classes.brand)}\n        >\n            <div className=\"flex items-center\">\n                <MatxLogo />\n                <span\n                    className={clsx({\n                        'text-18 ml-2 font-medium sidenavHoverShow': true,\n                        [classes.hideOnCompact]: mode === 'compact',\n                    })}\n                >\n                </span>\n            </div>\n            <div\n                className={clsx({\n                    sidenavHoverShow: true,\n                    [classes.hideOnCompact]: mode === 'compact',\n                })}\n            >\n                {children || null}\n            </div>\n        </div>\n    )\n}\n\nexport default Brand\n","import React from 'react'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\n\nimport Sidenav from '../../Sidenav/Sidenav'\nimport Brand from '../../Brand/Brand'\nimport { Switch, Hidden } from '@material-ui/core'\nimport { convertHexToRGB } from 'utils'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    sidenav: ({ width, primaryRGB, bgImgURL }) => ({\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: width,\n        boxShadow: theme.shadows[8],\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top',\n        backgroundSize: 'cover',\n        zIndex: 111,\n        overflow: 'hidden',\n        color: palette.text.primary,\n        transition: 'all 250ms ease-in-out',\n        background: '#191919',\n        '&:hover': {\n            width: 'var(--sidenav-width)',\n            '& .sidenavHoverShow': {\n                display: 'block',\n            },\n            '& .compactNavItem': {\n                width: '100%',\n                maxWidth: '100%',\n                '& .nav-bullet': {\n                    display: 'block',\n                },\n                '& .nav-bullet-text': {\n                    display: 'none',\n                },\n            },\n        },\n    }),\n    hideOnCompact: {\n        display: 'none',\n    },\n    userInfo: {},\n}))\n\nconst Layout1Sidenav = () => {\n    const theme = useTheme()\n\n    const { settings, updateSettings } = useSettings()\n\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    const getSidenavWidth = () => {\n        switch (mode) {\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return 'var(--sidenav-width)'\n        }\n    }\n\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\n    const classes = useStyles({\n        ...leftSidebar,\n        width: getSidenavWidth(),\n        primaryRGB,\n    })\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidenavToggle = () => {\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\n    }\n\n    return (\n        <div className={classes.sidenav}>\n            <div className=\"flex-column relative h-full\">\n                <Brand>\n                    <Hidden smDown>\n                        <Switch\n                            onChange={handleSidenavToggle}\n                            checked={leftSidebar.mode !== 'full'}\n                            color=\"secondary\"\n                            size=\"small\"\n                        />\n                    </Hidden>\n                </Brand>\n                <Sidenav />\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Sidenav)\n","import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n","import { useContext } from 'react'\nimport NotificationContext from 'app/contexts/NotificationContext'\n\nconst useNotification = () => useContext(NotificationContext)\n\nexport default useNotification\n","import React, { Fragment } from 'react'\n\nimport {\n    Icon,\n    Badge,\n    Card,\n    Button,\n    IconButton,\n    Drawer,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { getTimeDifference } from 'utils.js'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\nimport useNotification from 'app/hooks/useNotification'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    notification: {\n        width: 'var(--sidenav-width)',\n        '& .notification__topbar': {\n            height: 'var(--topbar-height)',\n        },\n    },\n     customBadge: {\n        backgroundColor: \"#ddd\",\n        color: \"#000\"\n        },\n    notificationCard: {\n        '&:hover': {\n            '& .delete-button': {\n                cursor: 'pointer',\n                display: 'unset',\n                right: 0,\n                marginTop: 6,\n                top: 0,\n                zIndex: 2,\n            },\n            '& .card__topbar__time': {\n                display: 'none',\n            },\n        },\n        '& .delete-button': {\n            display: 'none',\n            position: 'absolute',\n            right: 0,\n            marginTop: 9,\n        },\n        '& .card__topbar__button': {\n            borderRadius: 15,\n            opacity: 0.9,\n        },\n    },\n}))\n\nconst NotificationBar = ({ container }) => {\n    const [panelOpen, setPanelOpen] = React.useState(false)\n\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const {\n        deleteNotification,\n        clearNotifications,\n        notifications,\n    } = useNotification()\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" classes={{badge: classes.customBadge}} badgeContent={notifications?.length}>\n                    <Icon className='text-muted'>notifications</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    width={'100px'}\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div className={classes.notification}>\n                        <div className=\"notification__topbar elevation-z6 flex items-center p-4 mb-4\">\n                            <Icon color=\"primary\">notifications</Icon>\n                            <h5 className=\"ml-2 my-0 font-medium\">\n                                Notifications\n                            </h5>\n                        </div>\n\n                        {notifications?.map((notification) => (\n                            <div\n                                key={notification.id}\n                                className={clsx(\n                                    'relative',\n                                    classes.notificationCard\n                                )}\n                            >\n                                <IconButton\n                                    size=\"small\"\n                                    className=\"delete-button bg-light-gray mr-6\"\n                                    onClick={() =>\n                                        deleteNotification(notification.id)\n                                    }\n                                >\n                                    <Icon\n                                        className=\"text-muted\"\n                                        fontSize=\"small\"\n                                    >\n                                        clear\n                                    </Icon>\n                                </IconButton>\n                                <Link\n                                    to={`/${notification.path}`}\n                                    onClick={handleDrawerToggle}\n                                >\n                                    <Card className=\"mx-4 mb-6\" elevation={3}>\n                                        <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\">\n                                                    <Icon\n                                                        className=\"card__topbar__icon\"\n                                                        fontSize=\"small\"\n                                                        color={\n                                                            notification.icon\n                                                                .color\n                                                        }\n                                                    >\n                                                        {notification.icon.name}\n                                                    </Icon>\n                                                </div>\n                                                <span className=\"ml-4 font-medium text-muted\">\n                                                    {notification.heading}\n                                                </span>\n                                            </div>\n                                            <small className=\"card__topbar__time text-muted\">\n                                                {getTimeDifference(\n                                                    new Date(\n                                                        notification.timestamp\n                                                    )\n                                                )}{' '}\n                                                ago\n                                            </small>\n                                        </div>\n                                        <div className=\"px-4 pt-2 pb-4\">\n                                            <p className=\"m-0\">\n                                                {notification.title}\n                                            </p>\n                                            <small className=\"text-muted\">\n                                                {notification.subtitle}\n                                            </small>\n                                        </div>\n                                    </Card>\n                                </Link>\n                            </div>\n                        ))}\n                        {!!notifications?.length && (\n                            <div className=\"text-center\">\n                                <Button onClick={clearNotifications}>\n                                    Clear Notifications\n                                </Button>\n                            </div>\n                        )}\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default NotificationBar\n","import React from 'react'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@material-ui/core'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { Link } from 'react-router-dom'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\nimport '../../../styles/style.css'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        transition: 'all 0.3s ease',\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n\n        '& .topbar-hold': {\n            backgroundColor: '#1D1D1D',\n            height: 80,\n            paddingLeft: 18,\n            paddingRight: 20,\n            [theme.breakpoints.down('sm')]: {\n                paddingLeft: 16,\n                paddingRight: 16,\n            },\n            [theme.breakpoints.down('xs')]: {\n                paddingLeft: 14,\n                paddingRight: 16,\n            },\n        },\n        '& .fixed': {\n            boxShadow: theme.shadows[8],\n            height: 64,\n        },\n    },\n    userMenu: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 24,\n        padding: 4,\n        '& span': {\n            margin: '0 8px',\n            // color: palette.text.secondary\n        },\n    },\n    menuItem: {\n        display: 'flex',\n        alignItems: 'center',\n        minWidth: 185,\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n    const fixed = settings?.layout1Settings?.topbar?.fixed\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <div className={classes.topbar}>\n            <div className={clsx({ 'topbar-hold': true, fixed: fixed })}>\n                <div className=\"flex justify-between items-center h-full\">\n                    <div className=\"flex\">\n                        <IconButton\n                            onClick={handleSidebarToggle}\n                        >\n                            <Icon className='text-muted'>menu</Icon>\n                        </IconButton>\n\n                        {/* <div className=\"hide-on-mobile\">\n                            <IconButton>\n                                <Icon>mail_outline</Icon>\n                            </IconButton>\n\n                            <IconButton>\n                                <Icon>web_asset</Icon>\n                            </IconButton>\n\n                            <IconButton>\n                                <Icon>star_outline</Icon>\n                            </IconButton>\n                        </div> */}\n                    </div>\n                    <div className=\"flex items-center\">\n                        <MatxSearchBox />\n                        <NotificationProvider>\n                            <NotificationBar />\n                        </NotificationProvider>\n\n                        {/* <NotificationBar2 /> */}\n\n                        <ShoppingCart/>\n\n                        <MatxMenu\n                            menuButton={\n                                <div className={classes.userMenu}>\n                                    <Hidden xsDown>\n                                        <span className='text-primary-custom'>\n                                            Hi <strong>{user.name}</strong>\n                                        </span>\n                                    </Hidden>\n                                    <Avatar\n                                        className=\"cursor-pointer\"\n                                        src={user.avatar}\n                                    />\n                                </div>\n                            }\n                        >\n                            <MenuItem>\n                                <Link className={classes.menuItem} to=\"/\">\n                                    <Icon> home </Icon>\n                                    <span className=\"pl-4\"> Home </span>\n                                </Link>\n                            </MenuItem>\n                            <MenuItem>\n                                <Link\n                                    className={classes.menuItem}\n                                    to=\"/page-layouts/user-profile\"\n                                >\n                                    <Icon> person </Icon>\n                                    <span className=\"pl-4\"> Profile </span>\n                                </Link>\n                            </MenuItem>\n                            <MenuItem className={classes.menuItem}>\n                                <Icon> settings </Icon>\n                                <span className=\"pl-4\"> Settings </span>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={logout}\n                                className={classes.menuItem}\n                            >\n                                <Icon> power_settings_new </Icon>\n                                <span className=\"pl-4\"> Logout </span>\n                            </MenuItem>\n                        </MatxMenu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","import React, { useContext, useEffect, useRef } from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useMediaQuery } from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { renderRoutes } from 'react-router-config'\nimport Layout1Topbar from './Layout1Topbar'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Footer from '../../Footer/Footer'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport AppContext from 'app/contexts/AppContext'\nimport { MatxSuspense } from 'app/components'\nimport { useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    contentWrap: ({ width, secondarySidebar }) => {\n        return {\n            verticalAlign: 'top',\n            marginLeft: width,\n            transition: 'all 0.3s ease',\n            // [theme.breakpoints.up(\"sm\")]: {\n            marginRight: secondarySidebar.open ? 50 : 0,\n            // },\n        }\n    },\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n        transition: 'all 0.3s ease',\n    },\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n    const { routes } = useContext(AppContext)\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return 'var(--sidenav-width)'\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    let classes = useStyles({ width: sidenavWidth, secondarySidebar })\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const layoutClasses = `theme-${theme.palette.type} flex`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <div className={clsx('bg-default', layoutClasses)}>\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                    <Layout1Sidenav />\n                </SidenavTheme>\n            )}\n\n            <div\n                className={clsx(\n                    'flex-grow flex-column relative overflow-hidden h-full-screen',\n                    classes.contentWrap\n                )}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n\n                {settings.perfectScrollbar && (\n                    <Scrollbar className=\"flex-grow flex-column relative h-full\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"relative flex-grow\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </Scrollbar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <div className=\"flex-grow flex-column relative h-full scroll-y\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"relative flex-grow\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </div>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </div>\n    )\n}\n\nexport default React.memo(Layout1)\n"],"sourceRoot":""}