{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/unstable_useId.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","app/views/CRUD/MemberEditorDialog.jsx","app/views/CRUD/TableService.js","app/views/CRUD/CrudTable.jsx"],"names":["useId","idOverride","_React$useState","React","defaultId","setDefaultId","id","concat","Math","round","random","Table","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","TableContext","Provider","value","_extends","role","clsx","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","TableRow","_props$hover","hover","_props$selected","selected","tablelvl2","Tablelvl2Context","head","footer","variant","verticalAlign","outline","backgroundColor","action","fade","main","selectedOpacity","TableBody","TableHead","Switch","_props$color","_props$edge","edge","icon","thumb","edgeStart","edgeEnd","capitalize","SwitchBase","type","checkedIcon","switchBase","input","checked","disabled","track","height","overflow","boxSizing","position","flexShrink","zIndex","colorAdjust","marginLeft","marginRight","top","left","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","borderRadius","MemberEditorDialog","uid","open","handleClose","useState","email","phone","balance","age","company","address","isActive","state","setState","handleChange","event","source","persist","target","useEffect","axios","get","data","then","Dialog","onClose","onSubmit","User","post","addNewUser","generateRandomId","Grid","container","item","sm","xs","label","onChange","validators","errorMessages","FormControlLabel","control","Button","onClick","useStyles","makeStyles","productTable","paddingLeft","borderBottom","CrudTable","setUid","rowsPerPage","setRowsPerPage","page","setPage","user","setUser","userList","setUserList","shouldOpenEditorDialog","setShouldOpenEditorDialog","shouldOpenConfirmationDialog","setShouldOpenConfirmationDialog","handleDialogClose","updatePageData","routeSegments","Card","elevation","TableCell","slice","map","index","key","shortid","generate","align","IconButton","Icon","handleDeleteUser","TablePagination","rowsPerPageOptions","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","onConfirmDialogClose","onYesClick"],"mappings":"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","file":"static/js/51.0d06a5a0.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState, useEffect } from 'react'\nimport {\n    Dialog,\n    Button,\n    Grid,\n    FormControlLabel,\n    Switch,\n} from '@material-ui/core'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { getUserById, updateUser, addNewUser } from './TableService'\nimport { generateRandomId } from 'utils'\n\nconst MemberEditorDialog = ({ uid, open, handleClose }) => {\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        balance: '',\n        age: '',\n        company: '',\n        address: '',\n        isActive: false,\n    })\n\n    const handleChange = (event, source) => {\n        event.persist()\n        if (source === 'switch') {\n            setState({\n                ...state,\n                isActive: event.target.checked,\n            })\n            return\n        }\n\n        setState({\n            ...state,\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    const handleFormSubmit = () => {\n        let { id } = state\n        if (id) {\n            updateUser({\n                ...state,\n            }).then(() => {\n                handleClose()\n            })\n        } else {\n            addNewUser({\n                id: generateRandomId(),\n                ...state,\n            }).then(() => {\n                handleClose()\n            })\n        }\n    }\n\n    useEffect(() => {\n        getUserById(uid).then((data) => setState({ ...data.data }))\n    }, [uid])\n\n    return (\n        <Dialog onClose={handleClose} open={open}>\n            <div className=\"p-6\">\n                <h4 className=\"mb-5\">Update Member</h4>\n                <ValidatorForm onSubmit={handleFormSubmit}>\n                    <Grid className=\"mb-4\" container spacing={4}>\n                        <Grid item sm={6} xs={12}>\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Name\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"name\"\n                                value={state?.name}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Email\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"email\"\n                                value={state?.email}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Phone\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"phone\"\n                                value={state?.phone}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Balance\"\n                                onChange={handleChange}\n                                type=\"number\"\n                                name=\"balance\"\n                                value={state?.balance}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                        </Grid>\n\n                        <Grid item sm={6} xs={12}>\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Age\"\n                                onChange={handleChange}\n                                type=\"number\"\n                                name=\"age\"\n                                value={state?.age}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Company\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"company\"\n                                value={state?.company}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <TextValidator\n                                className=\"w-full mb-4\"\n                                label=\"Address\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"address\"\n                                value={state?.address}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n\n                            <FormControlLabel\n                                className=\"my-5\"\n                                control={\n                                    <Switch\n                                        checked={state?.isActive}\n                                        onChange={(event) =>\n                                            handleChange(event, 'switch')\n                                        }\n                                    />\n                                }\n                                label=\"Active Customer\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <div className=\"flex justify-between items-center\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                        >\n                            Save\n                        </Button>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => handleClose()}\n                        >\n                            Cancel\n                        </Button>\n                    </div>\n                </ValidatorForm>\n            </div>\n        </Dialog>\n    )\n}\n\nexport default MemberEditorDialog\n","import axios from 'axios'\n\nexport const getAllUser = () => {\n    return axios.get('/api/user/all')\n}\nexport const getUserById = (id) => {\n    return axios.get('/api/user', { data: id })\n}\nexport const deleteUser = (User) => {\n    return axios.post('/api/user/delete', User)\n}\nexport const addNewUser = (User) => {\n    return axios.post('/api/user/add', User)\n}\nexport const updateUser = (User) => {\n    return axios.post('/api/user/update', User)\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n    Button,\n    Card,\n} from '@material-ui/core'\nimport { getAllUser, deleteUser } from './TableService'\nimport MemberEditorDialog from './MemberEditorDialog'\nimport { Breadcrumb, ConfirmationDialog } from 'app/components'\nimport shortid from 'shortid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    productTable: {\n        '& thead': {\n            '& th:first-child': {\n                paddingLeft: 16,\n            },\n        },\n        '& td': {\n            borderBottom: 'none',\n        },\n        '& td:first-child': {\n            paddingLeft: '16px !important',\n        },\n    },\n}))\n\nconst CrudTable = () => {\n    const [uid, setUid] = useState(null)\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [page, setPage] = useState(0)\n    const [user, setUser] = useState(null)\n    const [userList, setUserList] = useState([])\n    const [shouldOpenEditorDialog, setShouldOpenEditorDialog] = useState(false)\n    const [\n        shouldOpenConfirmationDialog,\n        setShouldOpenConfirmationDialog,\n    ] = useState(false)\n\n    const classes = useStyles()\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleDialogClose = () => {\n        setShouldOpenEditorDialog(false)\n        setShouldOpenConfirmationDialog(false)\n        updatePageData()\n    }\n\n    const handleDeleteUser = (user) => {\n        setUser(user)\n        setShouldOpenConfirmationDialog(true)\n    }\n\n    const handleConfirmationResponse = () => {\n        deleteUser(user).then(() => {\n            handleDialogClose()\n        })\n    }\n\n    const updatePageData = () => {\n        getAllUser().then(({ data }) => {\n            setUserList(data)\n        })\n    }\n\n    useEffect(() => {\n        updatePageData()\n    }, [])\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb routeSegments={[{ name: 'CRUD Table' }]} />\n            </div>\n\n            <Button\n                className=\"mb-4\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setShouldOpenEditorDialog(true)}\n            >\n                Add New Member\n            </Button>\n            <Card className=\"w-full overflow-auto\" elevation={6}>\n                <Table\n                    className={clsx(\n                        'whitespace-pre min-w-750',\n                        classes.productTable\n                    )}\n                >\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Age</TableCell>\n                            <TableCell>Balance</TableCell>\n                            <TableCell>Company</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {userList\n                            ?.slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((user, index) => (\n                                <TableRow hover key={shortid.generate()}>\n                                    <TableCell className=\"px-0\" align=\"left\">\n                                        {user.name}\n                                    </TableCell>\n                                    <TableCell className=\"px-0\" align=\"left\">\n                                        {user.age}\n                                    </TableCell>\n                                    <TableCell className=\"px-0\">\n                                        ${user.balance}\n                                    </TableCell>\n                                    <TableCell className=\"px-0\" align=\"left\">\n                                        {user.company}\n                                    </TableCell>\n                                    <TableCell className=\"px-0\">\n                                        {user.isActive ? (\n                                            <small className=\"rounded bg-primary elevation-z3 text-white px-2 py-2px\">\n                                                active\n                                            </small>\n                                        ) : (\n                                            <small className=\"rounded bg-light-gray elevation-z3 px-2 py-2px\">\n                                                inactive\n                                            </small>\n                                        )}\n                                    </TableCell>\n                                    <TableCell className=\"px-0 border-none\">\n                                        <IconButton\n                                            onClick={() => {\n                                                setUid(user.id)\n                                                setShouldOpenEditorDialog(true)\n                                            }}\n                                        >\n                                            <Icon color=\"primary\">edit</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() =>\n                                                handleDeleteUser(user)\n                                            }\n                                        >\n                                            <Icon color=\"error\">delete</Icon>\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n\n                <TablePagination\n                    className=\"px-4\"\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={userList?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={({ target: { value } }) =>\n                        setRowsPerPage(value)\n                    }\n                />\n\n                {shouldOpenEditorDialog && (\n                    <MemberEditorDialog\n                        handleClose={handleDialogClose}\n                        open={shouldOpenEditorDialog}\n                        uid={uid}\n                    />\n                )}\n                {shouldOpenConfirmationDialog && (\n                    <ConfirmationDialog\n                        open={shouldOpenConfirmationDialog}\n                        onConfirmDialogClose={handleDialogClose}\n                        onYesClick={handleConfirmationResponse}\n                        text=\"Are you sure to delete?\"\n                    />\n                )}\n            </Card>\n        </div>\n    )\n}\n\nexport default CrudTable\n"],"sourceRoot":""}