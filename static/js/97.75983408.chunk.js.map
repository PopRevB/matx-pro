{"version":3,"sources":["app/views/pages/products/ProductForm.jsx"],"names":["usestyles","makeStyles","palette","dropZone","transition","border","background","productSchema","yup","shape","name","required","price","category","quantity","initialValues","sku","categoryList","ProductForm","useState","imageList","setImageList","useDropzone","accept","getRootProps","getInputProps","isDragActive","acceptedFiles","classes","handleSubmit","values","a","isSubmitting","console","log","useEffect","className","routeSegments","path","elevation","onSubmit","enableReinitialize","validationSchema","errors","touched","handleChange","handleBlur","setSubmitting","setFieldValue","container","spacing","item","sm","xs","label","variant","size","fullWidth","onBlur","onChange","value","error","Boolean","helperText","multiline","description","select","sort","map","cat","key","clsx","length","productCode","type","salePrice","minOrderAmount","color"],"mappings":"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","file":"static/js/97.75983408.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n    Button,\n    Card,\n    Divider,\n    Grid,\n    Icon,\n    MenuItem,\n    TextField,\n} from '@material-ui/core'\nimport { Breadcrumb } from 'app/components'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { useDropzone } from 'react-dropzone'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst usestyles = makeStyles(({ palette, ...theme }) => ({\n    dropZone: {\n        transition: 'all 350ms ease-in-out',\n        border: '2px dashed rgba(var(--body),0.3)',\n        '&:hover': {\n            background: 'rgba(var(--body), 0.2) !important',\n        },\n    },\n}))\n\nconst ProductForm = () => {\n    const [imageList, setImageList] = useState([])\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        acceptedFiles,\n    } = useDropzone({ accept: 'image/*' })\n    const classes = usestyles()\n\n    const handleSubmit = async (values, { isSubmitting }) => {\n        console.log(values)\n    }\n\n    useEffect(() => {\n        setImageList(acceptedFiles)\n    }, [acceptedFiles])\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Pages', path: '/pages' },\n                        { name: 'Add new Coin' },\n                    ]}\n                />\n            </div>\n\n            <Card elevation={3}>\n                <div className=\"flex p-4\">\n                    <h4 className=\"m-0\">Add new Coin</h4>\n                </div>\n                <Divider className=\"mb-6\" />\n\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={handleSubmit}\n                    enableReinitialize={true}\n                    validationSchema={productSchema}\n                >\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        setSubmitting,\n                        setFieldValue,\n                    }) => (\n                        <form className=\"px-4\" onSubmit={handleSubmit}>\n                            <Grid container spacing={3}>\n                                <Grid item sm={6} xs={12}>\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.name || ''}\n                                        error={Boolean(\n                                            touched.name && errors.name\n                                        )}\n                                        helperText={touched.name && errors.name}\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"description\"\n                                        label=\"Description\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        multiline\n                                        // rows={8}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.description || ''}\n                                        error={Boolean(\n                                            touched.description &&\n                                                errors.description\n                                        )}\n                                        helperText={\n                                            touched.description &&\n                                            errors.description\n                                        }\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"category\"\n                                        label=\"Category\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        select\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.category || ''}\n                                        error={Boolean(\n                                            touched.category && errors.category\n                                        )}\n                                        helperText={\n                                            touched.category && errors.category\n                                        }\n                                    >\n                                        {categoryList.sort().map((cat) => (\n                                            <MenuItem value={cat} key={cat}>\n                                                {cat}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n\n                                    <div\n                                        className={clsx({\n                                            'border-radius-4 h-160 w-full flex justify-center items-center cursor-pointer mb-4': true,\n                                            [classes.dropZone]: true,\n                                            'bg-light-gray': !isDragActive,\n                                            'bg-gray': isDragActive,\n                                        })}\n                                        {...getRootProps()}\n                                    >\n                                        <input {...getInputProps()} />\n                                        <div className=\"flex-column items-center\">\n                                            <Icon className=\" text-48\">\n                                                publish\n                                            </Icon>\n                                            {imageList.length ? (\n                                                <span>\n                                                    {imageList.length} images\n                                                    were selected\n                                                </span>\n                                            ) : (\n                                                <span>Drop product images</span>\n                                            )}\n                                        </div>\n                                    </div>\n                                </Grid>\n                                <Grid item sm={6} xs={12}>\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"productCode\"\n                                        label=\"Product Code\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.productCode || ''}\n                                        error={Boolean(\n                                            touched.productCode &&\n                                                errors.productCode\n                                        )}\n                                        helperText={\n                                            touched.productCode &&\n                                            errors.productCode\n                                        }\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"sku\"\n                                        label=\"SKU\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.sku || ''}\n                                        error={Boolean(\n                                            touched.sku && errors.sku\n                                        )}\n                                        helperText={touched.sku && errors.sku}\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"price\"\n                                        label=\"Price\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.price || ''}\n                                        error={Boolean(\n                                            touched.price && errors.price\n                                        )}\n                                        helperText={\n                                            touched.price && errors.price\n                                        }\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"salePrice\"\n                                        label=\"Sale Price\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.salePrice || ''}\n                                        error={Boolean(\n                                            touched.salePrice &&\n                                                errors.salePrice\n                                        )}\n                                        helperText={\n                                            touched.salePrice &&\n                                            errors.salePrice\n                                        }\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"quantity\"\n                                        label=\"Quantity\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.quantity || ''}\n                                        error={Boolean(\n                                            touched.quantity && errors.quantity\n                                        )}\n                                        helperText={\n                                            touched.quantity && errors.quantity\n                                        }\n                                    />\n                                    <TextField\n                                        className=\"mb-4\"\n                                        name=\"minOrderAmount\"\n                                        label=\"Minimum Order Amount\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.minOrderAmount || ''}\n                                        error={Boolean(\n                                            touched.minOrderAmount &&\n                                                errors.minOrderAmount\n                                        )}\n                                        helperText={\n                                            touched.minOrderAmount &&\n                                            errors.minOrderAmount\n                                        }\n                                    />\n                                </Grid>\n                            </Grid>\n\n                            <Button\n                                className=\"mb-4 px-12\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                type=\"submit\"\n                            >\n                                Add Product\n                            </Button>\n                        </form>\n                    )}\n                </Formik>\n            </Card>\n        </div>\n    )\n}\n\nconst productSchema = yup.object().shape({\n    name: yup.string().required('Name is required'),\n    price: yup.number().required('Price is required'),\n    category: yup.string().required('Category is required'),\n    quantity: yup.number().required('Quantity is required'),\n})\n\nconst initialValues = {\n    name: '',\n    sku: '',\n    price: '',\n    category: '',\n    quantity: '',\n}\n\nconst categoryList = ['Electronics', 'Clothes', 'Toys', 'Books', 'Utensils']\nexport default ProductForm\n"],"sourceRoot":""}