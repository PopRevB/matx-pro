{"version":3,"sources":["../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","app/views/list/ListTopbar.jsx","app/views/list/ListView.jsx","app/views/list/GridView.jsx","app/views/list/AppList.jsx","app/views/list/ListService.js"],"names":["MenuItem","React","props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","_objectWithoutProperties","disabled","undefined","ListItem","_extends","button","dense","clsx","root","gutters","withStyles","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","useEnhancedEffect","window","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","children","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_props$dense","_props$disabled","_props$divider","divider","focusVisibleClassName","_props$selected","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","value","container","pop","display","justifyContent","position","textDecoration","textAlign","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","InputAdornment","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","variant","muiFormControl","useFormControl","FormControlContext","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","height","maxHeight","marginTop","marginRight","marginLeft","pointerEvents","ListTopbar","viewMode","sliderValue","handleSldierChange","handleInputChange","handleViewChange","TextField","onChange","InputProps","startAdornment","Icon","Hidden","xsDown","Slider","min","step","marks","aria-labelledby","IconButton","onClick","useStyles","makeStyles","listCard","top","bottom","right","zIndex","ListView","list","map","item","index","Card","key","id","elevation","Grid","justify","md","src","projectImage","alt","projectName","date","email","fontSize","comment","revision","Avatar","userImage","userName","smDown","menuButton","gridCard","left","background","GridView","spacing","sm","Checkbox","Button","AppList","useState","originalList","setOriginalList","setSliderValue","setList","setViewMode","search","useMemo","debounce","query","tempList","filter","toLowerCase","match","useEffect","axios","get","then","response","data","view","event","target","smUp"],"mappings":"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","file":"static/js/63.27d6bc2e.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React from 'react'\nimport {\n    Icon,\n    Slider,\n    TextField,\n    IconButton,\n    InputAdornment,\n    Hidden,\n} from '@material-ui/core'\n\nconst ListTopbar = ({\n    viewMode,\n    sliderValue,\n    handleSldierChange,\n    handleInputChange,\n    handleViewChange,\n}) => {\n    let marks = [{ value: 25 }, { value: 50 }, { value: 75 }, { value: 100 }]\n\n    return (\n        <div className=\"flex flex-wrap items-center justify-between\">\n            <div className=\"flex items-center\">\n                <TextField\n                    onChange={handleInputChange}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Icon>search</Icon>\n                            </InputAdornment>\n                        ),\n                    }}\n                ></TextField>\n            </div>\n\n            <div className=\"flex items-center\">\n                <Hidden xsDown>\n                    {viewMode === 'grid' && (\n                        <Slider\n                            className=\"w-120 mr-4\"\n                            value={sliderValue}\n                            min={25}\n                            step={null}\n                            marks={marks}\n                            onChange={handleSldierChange}\n                            aria-labelledby=\"continuous-slider\"\n                        />\n                    )}\n                    <IconButton\n                        color={viewMode === 'grid' ? 'primary' : 'default'}\n                        onClick={() => handleViewChange('grid')}\n                    >\n                        <Icon>view_comfy</Icon>\n                    </IconButton>\n\n                    <IconButton\n                        color={viewMode === 'list' ? 'primary' : 'default'}\n                        onClick={() => handleViewChange('list')}\n                    >\n                        <Icon>list</Icon>\n                    </IconButton>\n                </Hidden>\n            </div>\n        </div>\n    )\n}\n\nexport default ListTopbar\n","import React from 'react'\nimport {\n    Card,\n    Icon,\n    Avatar,\n    MenuItem,\n    IconButton,\n    Grid,\n    Hidden,\n} from '@material-ui/core'\nimport { MatxMenu } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    listCard: {\n        '& .project-image': {\n            height: 75,\n            width: 100,\n        },\n        '& .card__button-group': {\n            display: 'none',\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            right: 0,\n            zIndex: 1,\n        },\n        '&:hover': {\n            '& .card__button-group': {\n                display: 'flex',\n            },\n        },\n    },\n}))\n\nconst ListView = ({ list = [] }) => {\n    const classes = useStyles()\n\n    return (\n        <div>\n            {list.map((item, index) => (\n                <Card\n                    className={clsx({\n                        [classes.listCard]: true,\n                        'card p-2 relative': true,\n                        'mb-4': index < list.length,\n                    })}\n                    key={item.id}\n                    elevation={3}\n                >\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\n                        <Grid item md={6}>\n                            <div className=\"flex items-center\">\n                                <img\n                                    className=\"project-image w-full\"\n                                    src={item.projectImage}\n                                    alt=\"project\"\n                                />\n                                <div className=\"ml-4\">\n                                    <p className=\"m-0 mb-2\">\n                                        {item.projectName}\n                                    </p>\n                                    <div className=\"flex\">\n                                        <small className=\"text-muted\">\n                                            {item.date}\n                                        </small>\n                                        <small className=\"text-muted ml-6\">\n                                            {item.email}\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid item md={2}>\n                            <div className=\"text-muted flex items-center\">\n                                <Icon fontSize=\"small\">\n                                    chat_bubble_outline\n                                </Icon>\n                                <span className=\"mr-6 ml-1\">\n                                    {item.comment}\n                                </span>\n                                <Icon fontSize=\"small\">desktop_windows</Icon>\n                                <span className=\"ml-1\">{item.revision}</span>\n                            </div>\n                        </Grid>\n                        <Grid item md={2}>\n                            <div className=\"flex items-center\">\n                                <Avatar src={item.userImage}></Avatar>\n                                <span className=\"ml-4\">{item.userName}</span>\n                            </div>\n                        </Grid>\n                        <Grid item md={2}>\n                            <div className=\"card__button-group items-center bg-paper\">\n                                <Icon\n                                    fontSize=\"small\"\n                                    className=\"mr-4 text-muted cursor-pointer\"\n                                >\n                                    filter_none\n                                </Icon>\n                                <Icon\n                                    fontSize=\"small\"\n                                    className=\"mr-4 text-muted cursor-pointer\"\n                                >\n                                    share\n                                </Icon>\n                                <Icon\n                                    fontSize=\"small\"\n                                    className=\"mr-4 text-muted cursor-pointer\"\n                                >\n                                    edit\n                                </Icon>\n                                <Icon\n                                    fontSize=\"small\"\n                                    className=\"mr-4 text-muted cursor-pointer\"\n                                >\n                                    delete\n                                </Icon>\n                            </div>\n\n                            <div className=\"card__drop-menu text-right\">\n                                <Hidden smDown>\n                                    <MatxMenu\n                                        menuButton={\n                                            <IconButton>\n                                                <Icon>more_horiz</Icon>\n                                            </IconButton>\n                                        }\n                                    >\n                                        <MenuItem className=\"flex items-center\">\n                                            <Icon className=\"mr-4\">\n                                                filter_none\n                                            </Icon>{' '}\n                                            Duplicate\n                                        </MenuItem>\n                                        <MenuItem className=\"flex items-center\">\n                                            <Icon className=\"mr-4\">share</Icon>{' '}\n                                            Share\n                                        </MenuItem>\n                                        <MenuItem className=\"flex items-center\">\n                                            <Icon className=\"mr-4\">edit</Icon>{' '}\n                                            Edit\n                                        </MenuItem>\n                                        <MenuItem className=\"flex items-center\">\n                                            <Icon className=\"mr-4\">delete</Icon>{' '}\n                                            Delete\n                                        </MenuItem>\n                                    </MatxMenu>\n                                </Hidden>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Card>\n            ))}\n        </div>\n    )\n}\n\nexport default ListView\n","import React from 'react'\nimport { Card, Icon, Grid, Checkbox, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    gridCard: {\n        '& .grid__card-overlay': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 2,\n            opacity: 0,\n            transition: 'all 250ms ease-in-out',\n            background: 'rgba(0, 0, 0, 0.67)',\n\n            '& > div:nth-child(2)': {\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                right: 0,\n                left: 0,\n                zIndex: -1,\n            },\n        },\n        '& .grid__card-bottom': {\n            '& .email': {\n                display: 'none',\n            },\n        },\n        '&:hover': {\n            '& .grid__card-overlay': {\n                opacity: 1,\n            },\n            '& .grid__card-bottom': {\n                '& .email': {\n                    display: 'block',\n                },\n                '& .date': {\n                    display: 'none',\n                },\n            },\n        },\n    },\n}))\n\nconst calculateColumnPerRow = (value) => {\n    if (value === 25) {\n        return 2\n    }\n    if (value === 50) {\n        return 3\n    }\n    if (value === 75) {\n        return 4\n    }\n    if (value === 100) {\n        return 6\n    }\n}\n\nconst GridView = ({ list = [], sliderValue }) => {\n    const classes = useStyles()\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                {list.map((item, index) => (\n                    <Grid\n                        item\n                        sm={calculateColumnPerRow(sliderValue)}\n                        key={item.id}\n                    >\n                        <Card\n                            className={clsx(\n                                'flex-column h-full',\n                                classes.gridCard\n                            )}\n                            elevation={6}\n                        >\n                            <div className=\"grid__card-top text-center relative\">\n                                <img\n                                    className=\"block w-full\"\n                                    src={item.projectImage}\n                                    alt=\"project\"\n                                />\n                                <div className=\"grid__card-overlay flex-column\">\n                                    <div className=\"flex items-center justify-between\">\n                                        <Checkbox className=\"text-white\"></Checkbox>\n                                        <div className=\"flex items-center\">\n                                            <Icon\n                                                fontSize=\"small\"\n                                                className=\"mr-3 cursor-pointer text-white\"\n                                            >\n                                                filter_none\n                                            </Icon>\n                                            <Icon\n                                                fontSize=\"small\"\n                                                className=\"mr-3 cursor-pointer text-white\"\n                                            >\n                                                share\n                                            </Icon>\n                                            <Icon\n                                                fontSize=\"small\"\n                                                className=\"mr-3 cursor-pointer text-white\"\n                                            >\n                                                edit\n                                            </Icon>\n                                            <Icon\n                                                fontSize=\"small\"\n                                                className=\"mr-3 cursor-pointer text-white\"\n                                            >\n                                                delete\n                                            </Icon>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex items-center justify-center\">\n                                        <Button\n                                            variant=\"outlined\"\n                                            className=\"text-white border-color-white\"\n                                        >\n                                            View Details\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"grid__card-bottom text-center py-2\">\n                                <p className=\"m-0\">{item.projectName}</p>\n                                <small className=\"date text-muted\">\n                                    {item.date}\n                                </small>\n                                <small className=\"email text-muted\">\n                                    {item.email}\n                                </small>\n                            </div>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n\nexport default GridView\n","import React, { useState, useMemo, useEffect } from 'react'\nimport ListTopbar from './ListTopbar'\nimport { getAllList } from './ListService'\nimport ListView from './ListView'\nimport GridView from './GridView'\nimport { Hidden } from '@material-ui/core'\nimport { debounce } from 'lodash'\n\nconst AppList = () => {\n    const [originalList, setOriginalList] = useState([])\n    const [sliderValue, setSliderValue] = useState(50)\n    const [list, setList] = useState([])\n    const [viewMode, setViewMode] = useState('grid')\n\n    const handleInputChange = (event) => {\n        let { value } = event.target\n        search(value)\n    }\n\n    const search = useMemo(\n        () =>\n            debounce((query) => {\n                let tempList = originalList.filter((item) =>\n                    item.projectName.toLowerCase().match(query.toLowerCase())\n                )\n                setList([...tempList])\n            }, 200),\n        [originalList]\n    )\n\n    const handleSldierChange = (event, value) => {\n        setSliderValue(value)\n    }\n\n    const handleViewChange = (view) => {\n        setViewMode(view)\n    }\n\n    useEffect(() => {\n        getAllList().then((response) => {\n            setOriginalList(response.data)\n            setList(response.data)\n        })\n    }, [])\n\n    return (\n        <div className=\"list m-sm-30\">\n            <div className=\"mb-4\">\n                <ListTopbar\n                    viewMode={viewMode}\n                    handleViewChange={handleViewChange}\n                    handleInputChange={handleInputChange}\n                    handleSldierChange={handleSldierChange}\n                    sliderValue={sliderValue}\n                ></ListTopbar>\n            </div>\n            <Hidden xsDown>\n                {viewMode === 'list' ? (\n                    <ListView list={list}></ListView>\n                ) : (\n                    <GridView list={list} sliderValue={sliderValue}></GridView>\n                )}\n            </Hidden>\n\n            <Hidden smUp>\n                <GridView list={list} sliderValue={sliderValue}></GridView>\n            </Hidden>\n        </div>\n    )\n}\n\nexport default AppList\n","import axios from 'axios'\n\nexport const getAllList = () => {\n    return axios.get('/api/list/all')\n}\n"],"sourceRoot":""}