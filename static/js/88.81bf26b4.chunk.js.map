{"version":3,"sources":["app/views/forms/HorizontalStepper.jsx","app/views/forms/VerticalStepper.jsx","app/views/forms/WizardForm.jsx"],"names":["HorizontalStepper","useState","activeStep","setActiveStep","steps","Stepper","alternativeLabel","map","label","Step","key","StepLabel","length","className","Icon","Button","variant","color","onClick","stepIndex","noValidate","autoComplete","Grid","container","spacing","item","lg","md","sm","xs","TextField","getStepContent","disabled","prevActiveStep","useStyles","makeStyles","theme","root","width","button","marginTop","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalStepper","classes","handleNext","handleBack","orientation","index","StepContent","step","Paper","square","elevation","Typography","WizardForm","title"],"mappings":"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","file":"static/js/88.81bf26b4.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n    TextField,\n    Icon,\n    Button,\n    StepLabel,\n    Step,\n    Stepper,\n    Grid,\n} from '@material-ui/core'\n\nconst getSteps = () => {\n    return ['First Name', 'Last Name', 'Address']\n}\n\nfunction getStepContent(stepIndex) {\n    switch (stepIndex) {\n        case 0:\n            return (\n                <form noValidate autoComplete=\"off\">\n                    <Grid container spacing={3}>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField className=\"w-full\" label=\"First Name\" />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField className=\"w-full\" label=\"Middle Name\" />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField className=\"w-full\" label=\"Last Name\" />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\n                            <TextField className=\"w-full\" label=\"Age\" />\n                        </Grid>\n                    </Grid>\n                </form>\n            )\n        case 1:\n            return <TextField label=\"Company Name\"></TextField>\n        case 2:\n            return <TextField label=\"Address\"></TextField>\n        default:\n            return ''\n    }\n}\n\nexport default function HorizontalStepper() {\n    const [activeStep, setActiveStep] = useState(0)\n    const steps = getSteps()\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    const handleReset = () => {\n        setActiveStep(0)\n    }\n\n    return (\n        <div>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <div className=\"flex items-center mb-4\">\n                            <Icon>done</Icon> <span className=\"ml-2\">Done</span>\n                        </div>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleReset}\n                        >\n                            Reset\n                        </Button>\n                    </div>\n                ) : (\n                    <div>\n                        {getStepContent(activeStep)}\n                        <div className=\"pt-6\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                disabled={activeStep === 0}\n                                onClick={handleBack}\n                            >\n                                Back\n                            </Button>\n                            <Button\n                                className=\"ml-4\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                            >\n                                {activeStep === steps.length - 1\n                                    ? 'Finish'\n                                    : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport {\n    TextField,\n    Typography,\n    Paper,\n    Button,\n    StepContent,\n    StepLabel,\n    Step,\n    Stepper,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}))\n\nconst getSteps = () => {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad']\n}\n\nconst getStepContent = (step) => {\n    switch (step) {\n        case 0:\n            return <TextField label=\"First Name\"></TextField>\n        case 1:\n            return <TextField label=\"Last Name\"></TextField>\n        case 2:\n            return <TextField label=\"Address\"></TextField>\n        default:\n            return ''\n    }\n}\n\nexport default function VerticalStepper() {\n    const classes = useStyles()\n    const [activeStep, setActiveStep] = useState(0)\n    const steps = getSteps()\n\n    function handleNext() {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n\n    function handleBack() {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    function handleReset() {\n        setActiveStep(0)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                        <StepContent>\n                            <div>{getStepContent(index)}</div>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        className={classes.button}\n                                    >\n                                        Back\n                                    </Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1\n                                            ? 'Finish'\n                                            : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>\n                        All steps completed - you&apos;re finished\n                    </Typography>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={handleReset}\n                        className={classes.button}\n                    >\n                        Reset\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { SimpleCard } from 'app/components'\nimport HorizontalStepper from './HorizontalStepper'\nimport VerticalStepper from './VerticalStepper'\n\nconst WizardForm = () => {\n    return (\n        <div className=\"m-sm-30\">\n            <SimpleCard title=\"Horizontal Stepper\">\n                <HorizontalStepper></HorizontalStepper>\n            </SimpleCard>\n            <div className=\"py-3\"></div>\n            <SimpleCard title=\"Vertical Stepper\">\n                <VerticalStepper></VerticalStepper>\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default WizardForm\n"],"sourceRoot":""}