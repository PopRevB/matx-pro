{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/unstable_useId.js","../node_modules/@material-ui/icons/esm/Twitter.js","app/views/pages/user-list/ProfileCard1.jsx","app/views/pages/user-list/UserList3.jsx"],"names":["useId","idOverride","_React$useState","React","defaultId","setDefaultId","id","concat","Math","round","random","createSvgIcon","d","useStyles","makeStyles","palette","google","color","twitter","ProfileCard1","user","classes","Card","className","Avatar","src","imgUrl","menuButton","Icon","MenuItem","fontSize","name","to","clsx","Twitter","Button","size","UserList3","useState","isAlive","setIsAlive","userList","setUserList","rowsPerPage","setRowsPerPage","page","setPage","useEffect","Axios","get","then","data","routeSegments","path","Grid","container","spacing","item","md","sm","xs","Divider","variant","slice","map","ind","key","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value"],"mappings":"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","file":"static/js/69.3aedd1c3.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function useId(idOverride) {\n  var _React$useState = React.useState(idOverride),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idOverride || defaultId;\n  React.useEffect(function () {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the random value for client-side rendering only.\n      // We can't use it server-side.\n      setDefaultId(\"mui-\".concat(Math.round(Math.random() * 1e5)));\n    }\n  }, [defaultId]);\n  return id;\n}","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');","import React from 'react'\nimport { Card, Button, Icon, Avatar, MenuItem } from '@material-ui/core'\nimport { MatxMenu, GoogleIcon } from 'app/components'\nimport { Link } from 'react-router-dom'\nimport { Twitter } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    google: {\n        color: '#ec412c',\n    },\n    twitter: {\n        color: '#039ff5',\n    },\n}))\n\nconst ProfileCard1 = ({ user }) => {\n    const classes = useStyles()\n\n    return (\n        <Card className=\"p-5\">\n            <div className=\"flex justify-between mb-4\">\n                <Avatar className=\"h-56 w-56\" src={user?.imgUrl} />\n                <div>\n                    <MatxMenu\n                        menuButton={\n                            <Icon className=\"cursor-pointer\">more_horiz</Icon>\n                        }\n                    >\n                        <MenuItem>\n                            <Icon fontSize=\"small\"> account_circle </Icon>\n                            <span className=\"pl-4\"> View Profile </span>\n                        </MenuItem>\n                        <MenuItem>\n                            <Icon fontSize=\"small\"> person_add </Icon>\n                            <span className=\"pl-4\"> Add to Team </span>\n                        </MenuItem>\n                        <MenuItem>\n                            <Icon fontSize=\"small\"> edit </Icon>\n                            <span className=\"pl-4\"> Edit Profile </span>\n                        </MenuItem>\n                    </MatxMenu>\n                </div>\n            </div>\n            <div>\n                <h5 className=\"m-0 capitalize\">{user?.name}</h5>\n                <p className=\"text-muted\">\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout.\n                </p>\n                <div className=\"mb-4\">\n                    <Link className=\"flex mb-1 items-center\" to=\"/\">\n                        <GoogleIcon\n                            fontSize=\"small\"\n                            className={clsx('text-14', classes.google)}\n                        />\n                        <span className=\"ml-2\">ui-lib@gmail.com</span>\n                    </Link>\n                    <Link className=\"flex items-center\" to=\"/\">\n                        <Twitter\n                            fontSize=\"small\"\n                            className={clsx('text-14', classes.twitter)}\n                        />\n                        <span className=\"ml-2\">uilib</span>\n                    </Link>\n                </div>\n                <div className=\"flex flex-wrap\">\n                    <Button\n                        size=\"small\"\n                        className=\"bg-light-primary hover-bg-primary text-primary px-5 mr-1\"\n                    >\n                        CHAT\n                    </Button>\n                    <Button\n                        size=\"small\"\n                        className=\"bg-light-primary hover-bg-primary text-primary px-5\"\n                    >\n                        PROFILE\n                    </Button>\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default ProfileCard1\n","import React, { useState, useEffect } from 'react'\nimport {\n    Grid,\n    Card,\n    Avatar,\n    Divider,\n    Button,\n    Icon,\n    TablePagination,\n} from '@material-ui/core'\nimport { Breadcrumb } from 'app/components'\nimport Axios from 'axios'\nimport ProfileCard1 from './ProfileCard1'\n\nconst UserList3 = () => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [userList, setUserList] = useState([])\n\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [page, setPage] = useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    useEffect(() => {\n        Axios.get('/api/user/all').then(({ data }) => {\n            if (isAlive) setUserList(data)\n        })\n        return () => setIsAlive(false)\n    }, [isAlive])\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Pages', path: '/pages' },\n                        { name: 'User List 3' },\n                    ]}\n                />\n            </div>\n            <Grid container spacing={2}>\n                <Grid item md={3} sm={12} xs={12}>\n                    <Card className=\"pb-8\">\n                        <div className=\"p-8 flex-column items-center\">\n                            <Avatar\n                                className=\"h-56 w-56 mb-6\"\n                                src=\"/assets/images/face-1.png\"\n                            />\n                            <p className=\"mt-0 mb-2 text-muted font-normal capitalize\">\n                                Project manager\n                            </p>\n                            <h5 className=\"m-0\">Asiya Wolff</h5>\n                        </div>\n                        <Divider className=\"mb-8\" />\n                        <div className=\"mb-8\">\n                            <p className=\"text-muted mt-0 mb-3 ml-3\">TEAMS</p>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Alpha</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Beta</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Sales</span>\n                            </Button>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">people</Icon>\n                                <span className=\"ml-2\">Report</span>\n                            </Button>\n                        </div>\n                        <div>\n                            <p className=\"text-muted mt-0 mb-3 ml-3\">MY TEAM</p>\n                            <Button\n                                variant=\"text\"\n                                className=\"w-full justify-start px-3\"\n                            >\n                                <Icon fontSize=\"small\">favorite</Icon>\n                                <span className=\"ml-2\">Favorite</span>\n                            </Button>\n                        </div>\n                    </Card>\n                </Grid>\n                <Grid item md={9} sm={12} xs={12}>\n                    <Grid container spacing={2}>\n                        {userList\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((user, ind) => (\n                                <Grid key={user.id} item sm={6} xs={12}>\n                                    <ProfileCard1 user={user} />\n                                </Grid>\n                            ))}\n                    </Grid>\n                    <div className=\"mt-4\">\n                        <TablePagination\n                            className=\"px-4\"\n                            rowsPerPageOptions={[10, 25, 50]}\n                            component=\"div\"\n                            count={userList.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default UserList3\n"],"sourceRoot":""}